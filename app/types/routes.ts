// This file was generated by `gen-remix-routes`. DO NOT EDIT.

export const routePatterns = [
	"/",
	"/base/colors",
	"/base/shadows",
	"/base/tailwind-variants",
	"/base/typography",
	"/components/anchor",
	"/components/button",
	"/components/card",
	"/components/code-block",
	"/components/icon",
	"/components/icon-button",
	"/components/inline-code",
	"/components/input",
	"/components/media-object",
	"/components/password-input",
	"/components/preview/alert",
	"/components/preview/badge",
	"/components/preview/calendar",
	"/components/preview/checkbox",
	"/components/preview/dialog",
	"/components/preview/dropdown-menu",
	"/components/preview/popover",
	"/components/preview/radio-group",
	"/components/preview/sheet",
	"/components/preview/tooltip",
	"/components/select",
	"/components/separator",
	"/components/skeleton",
	"/components/table",
	"/components/text-area",
	"/components/theme-provider",
] as const;

export type RoutePattern = (typeof routePatterns)[number];

export const routePattern = <T extends RoutePattern>(value: T) => value;

export const isRoutePattern = (value: unknown): value is RoutePattern =>
	typeof value === "string" && routePatterns.includes(value as RoutePattern);

export const routes = [
	"/",
	"/base/colors",
	"/base/shadows",
	"/base/tailwind-variants",
	"/base/typography",
	"/components/anchor",
	"/components/button",
	"/components/card",
	"/components/code-block",
	"/components/icon",
	"/components/icon-button",
	"/components/inline-code",
	"/components/input",
	"/components/media-object",
	"/components/password-input",
	"/components/preview/alert",
	"/components/preview/badge",
	"/components/preview/calendar",
	"/components/preview/checkbox",
	"/components/preview/dialog",
	"/components/preview/dropdown-menu",
	"/components/preview/popover",
	"/components/preview/radio-group",
	"/components/preview/sheet",
	"/components/preview/tooltip",
	"/components/select",
	"/components/separator",
	"/components/skeleton",
	"/components/table",
	"/components/text-area",
	"/components/theme-provider",
] as const;

export type Route = (typeof routes)[number];

export const route = <T extends Route>(value: T) => value;

export const isRoute = (value: unknown): value is Route => typeof value === "string" && routes.includes(value as Route);

export const topLevelNavItems = ["/", "/base", "/components"] as const;

export type TopLevelNav = (typeof topLevelNavItems)[number];

export const topLevelNav = <T extends TopLevelNav>(value: T) => value;

export const isTopLevelNav = (value: unknown): value is TopLevelNav =>
	typeof value === "string" && topLevelNavItems.includes(value as TopLevelNav);
