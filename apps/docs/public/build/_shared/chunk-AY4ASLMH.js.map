{
  "version": 3,
  "sources": ["../../../packages/icon/src/_icon-base.tsx"],
  "sourcesContent": ["import type { ReactElement, ReactNode } from \"react\";\nimport { Children, cloneElement, isValidElement } from \"react\";\nimport invariant from \"tiny-invariant\";\nimport { cx } from \"../../cx\";\nimport type { WithStyleProps } from \"../../types\";\nimport type { SvgAttributes } from \"./types\";\n\ntype IconBaseProps = WithStyleProps & {\n\t/**\n\t * A single SVG icon element.\n\t */\n\tsvg: ReactNode;\n};\n\n/**\n * @private Internal component for Icon, should not be exported from mantle. Can be used in other mantle components if needed.\n * The main difference between Icon and IconBase is that IconBase does not apply any default sizing styles, only `shrink-0`.\n *\n * Decorates an svg icon with automatic sizing styles.\n * Merges `className` selectors with the following order of precedence (last one wins):\n * 1. Icon base classes\n * 2. svg className\n * 3. Icon className\n */\nconst IconBase = ({ className, style, svg }: IconBaseProps) => {\n\tconst icon = Children.only(svg) as ReactElement;\n\tinvariant(isValidElement<SvgAttributes>(icon), \"Icon must be passed a single SVG icon as a JSX tag.\");\n\n\treturn (\n\t\t<>\n\t\t\t{cloneElement(icon, {\n\t\t\t\tclassName: cx(\"shrink-0\", icon.props.className, className),\n\t\t\t\tstyle: { ...icon.props.style, ...style },\n\t\t\t})}\n\t\t</>\n\t);\n};\n\nexport { IconBase };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AACA,mBAAuD;AA4BrD;AALF,IAAM,WAAW,CAAC,EAAE,WAAW,OAAO,IAAI,MAAqB;AAC9D,QAAM,OAAO,sBAAS,KAAK,GAAG;AAC9B,gBAAU,6BAA8B,IAAI,GAAG,qDAAqD;AAEpG,SACC,sFACE,yCAAa,MAAM;AAAA,IACnB,WAAW,GAAG,YAAY,KAAK,MAAM,WAAW,SAAS;AAAA,IACzD,OAAO,EAAE,GAAG,KAAK,MAAM,OAAO,GAAG,MAAM;AAAA,EACxC,CAAC,KAJF;AAAA;AAAA;AAAA;AAAA,SAKA;AAEF;",
  "names": []
}
