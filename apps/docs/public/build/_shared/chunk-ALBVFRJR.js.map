{
  "version": 3,
  "sources": ["../../../packages/card/src/card.tsx"],
  "sourcesContent": ["import { Slot } from \"@radix-ui/react-slot\";\nimport type { HTMLAttributes } from \"react\";\nimport { forwardRef } from \"react\";\nimport { cx } from \"../../cx\";\nimport type { WithAsChild } from \"../../types/src/as-child\";\n\nexport type CardProps = HTMLAttributes<HTMLDivElement>;\n\n/**\n * A container that can be used to display content in a box resembling a playing\n * card.\n */\nconst Card = forwardRef<HTMLDivElement, CardProps>(({ className, children, ...rest }, ref) => (\n\t<div\n\t\tref={ref}\n\t\tclassName={cx(\"relative divide-y divide-card-muted rounded-md border border-card bg-card\", className)}\n\t\t{...rest}\n\t>\n\t\t{children}\n\t</div>\n));\nCard.displayName = \"Card\";\n\n/**\n * The main content of a card. Usually composed as a direct child of a `Card` component.\n */\nconst CardBody = forwardRef<HTMLDivElement, CardProps>(({ className, children, ...rest }, ref) => (\n\t<div ref={ref} className={cx(\"p-6\", className)} {...rest}>\n\t\t{children}\n\t</div>\n));\nCardBody.displayName = \"CardBody\";\n\n/**\n * The footer container of a card. Usually composed as a direct child of a `Card` component.\n */\nconst CardFooter = forwardRef<HTMLDivElement, CardProps>(({ className, children, ...rest }, ref) => (\n\t<div ref={ref} className={cx(\"px-6 py-3\", className)} {...rest}>\n\t\t{children}\n\t</div>\n));\nCardFooter.displayName = \"CardFooter\";\n\n/**\n * The header container of a card. Usually composed as a direct child of a `Card` component.\n */\nconst CardHeader = forwardRef<HTMLDivElement, CardProps>(({ className, children, ...rest }, ref) => (\n\t<div ref={ref} className={cx(\"px-6 py-3\", className)} {...rest}>\n\t\t{children}\n\t</div>\n));\nCardHeader.displayName = \"CardHeader\";\n\nexport type CardTitleProps = HTMLAttributes<HTMLHeadingElement> & WithAsChild;\n\n/**\n * The title of a card. Usually composed as a direct child of a `CardHeader` component.\n */\nconst CardTitle = forwardRef<HTMLParagraphElement, CardTitleProps>(({ className, asChild, ...props }, ref) => {\n\tconst Comp = asChild ? Slot : \"h3\";\n\treturn <Comp ref={ref} className={cx(\"text-base font-medium text-strong\", className)} {...props} />;\n});\nCardTitle.displayName = \"CardTitle\";\n\nexport {\n\t//,\n\tCard,\n\tCardBody,\n\tCardFooter,\n\tCardHeader,\n\tCardTitle,\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAEA,mBAA2B;AAW1B;AADD,IAAM,WAAO,yBAAsC,CAAC,EAAE,WAAW,UAAU,GAAG,KAAK,GAAG,QACrF;AAAA,EAAC;AAAA;AAAA,IACA;AAAA,IACA,WAAW,GAAG,6EAA6E,SAAS;AAAA,IACnG,GAAG;AAAA,IAEH;AAAA;AAAA,EALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,CACA;AACD,KAAK,cAAc;AAKnB,IAAM,eAAW,yBAAsC,CAAC,EAAE,WAAW,UAAU,GAAG,KAAK,GAAG,QACzF,mDAAC,SAAI,KAAU,WAAW,GAAG,OAAO,SAAS,GAAI,GAAG,MAClD,YADF;AAAA;AAAA;AAAA;AAAA,OAEA,CACA;AACD,SAAS,cAAc;AAKvB,IAAM,iBAAa,yBAAsC,CAAC,EAAE,WAAW,UAAU,GAAG,KAAK,GAAG,QAC3F,mDAAC,SAAI,KAAU,WAAW,GAAG,aAAa,SAAS,GAAI,GAAG,MACxD,YADF;AAAA;AAAA;AAAA;AAAA,OAEA,CACA;AACD,WAAW,cAAc;AAKzB,IAAM,iBAAa,yBAAsC,CAAC,EAAE,WAAW,UAAU,GAAG,KAAK,GAAG,QAC3F,mDAAC,SAAI,KAAU,WAAW,GAAG,aAAa,SAAS,GAAI,GAAG,MACxD,YADF;AAAA;AAAA;AAAA;AAAA,OAEA,CACA;AACD,WAAW,cAAc;AAOzB,IAAM,gBAAY,yBAAiD,CAAC,EAAE,WAAW,SAAS,GAAG,MAAM,GAAG,QAAQ;AAC7G,QAAM,OAAO,UAAU,OAAO;AAC9B,SAAO,mDAAC,QAAK,KAAU,WAAW,GAAG,qCAAqC,SAAS,GAAI,GAAG,SAAnF;AAAA;AAAA;AAAA;AAAA,SAA0F;AAClG,CAAC;AACD,UAAU,cAAc;",
  "names": []
}
