{
  "version": 3,
  "sources": ["../../../app/components/props-table.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/props-table.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/props-table.tsx\");\n  import.meta.hot.lastModified = \"1724091104712.0063\";\n}\n// REMIX HMR END\n\nimport { cx } from \"@/cx\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/table\";\nimport { Tooltip, TooltipContent, TooltipTrigger } from \"@/tooltip\";\nimport Prism from \"prismjs\";\nimport { useEffect, useState } from \"react\";\nimport assert from \"tiny-invariant\";\nimport \"prismjs/components/prism-typescript.js\";\nexport const PropsTable = ({\n  children,\n  className,\n  style\n}) => <div className={cx(\"overflow-hidden rounded-lg border border-gray-300\", className)} style={style}>\n\t\t<Table>\n\t\t\t<TableHeader>\n\t\t\t\t<TableRow>\n\t\t\t\t\t<TableHead>Prop</TableHead>\n\t\t\t\t\t<TableHead>Type</TableHead>\n\t\t\t\t\t<TableHead>Default</TableHead>\n\t\t\t\t\t<TableHead>Description</TableHead>\n\t\t\t\t</TableRow>\n\t\t\t</TableHeader>\n\t\t\t<TableBody className=\"font-body text-xs text-body\">{children}</TableBody>\n\t\t</Table>\n\t</div>;\n_c = PropsTable;\nexport const PropRow = ({\n  children,\n  className,\n  style\n}) => <TableRow className={className} style={style}>\n\t\t{children}\n\t</TableRow>;\n_c2 = PropRow;\nexport const PropNameCell = ({\n  className,\n  name,\n  optional,\n  style\n}) => <TableCell className={cx(\"align-top font-mono\", className)} style={style}>\n\t\t<p className=\"flex items-center\">\n\t\t\t<span className=\"token attr-name\">{name}</span>\n\t\t\t{optional && <Tooltip>\n\t\t\t\t\t<TooltipTrigger>?</TooltipTrigger>\n\t\t\t\t\t<TooltipContent>This prop is optional.</TooltipContent>\n\t\t\t\t</Tooltip>}\n\t\t</p>\n\t</TableCell>;\n_c3 = PropNameCell;\nexport const PropTypeCell = ({\n  children,\n  className,\n  style\n}) => <TableCell className={cx(\"align-top font-mono\", className)} style={style}>\n\t\t{children}\n\t</TableCell>;\n_c4 = PropTypeCell;\nexport const PropDefaultValueCell = ({\n  children = <>&mdash;</>,\n  className,\n  style\n}) => <TableCell className={cx(\"align-top font-mono\", className)} style={style}>\n\t\t{children}\n\t</TableCell>;\n_c5 = PropDefaultValueCell;\nexport const PropDescriptionCell = ({\n  children,\n  className,\n  style\n}) => <TableCell className={cx(\"align-top\", className)} style={style}>\n\t\t{children}\n\t</TableCell>;\n_c6 = PropDescriptionCell;\nexport const ObjectPropType = ({\n  name\n}) => <span className=\"text-red-600\">{name}</span>;\n_c7 = ObjectPropType;\nexport const ReactNodePropType = () => <span className=\"text-red-600\">ReactNode</span>;\n_c8 = ReactNodePropType;\nexport const BooleanPropType = ({\n  value\n}) => <span className=\"text-purple-600\">{typeof value === \"undefined\" ? \"boolean\" : String(value)}</span>;\n_c9 = BooleanPropType;\nexport const StringPropType = ({\n  value\n}) => <span className=\"token attr-value\">{value ?? \"string\"}</span>;\n_c10 = StringPropType;\nexport const NumberPropType = ({\n  value\n}) => <span className=\"token number\">{value ?? \"number\"}</span>;\n_c11 = NumberPropType;\nexport const FuncPropType = ({\n  value\n}) => {\n  _s();\n  // trim any leading and trailing whitespace/empty lines\n  const trimmedCode = value?.trim() ?? \"\";\n  const [highlightedCodeInnerHtml, setHighlightedCodeInnerHtml] = useState(trimmedCode);\n  useEffect(() => {\n    const grammar = Prism.languages.typescript;\n    assert(grammar, \"Couldn't load Prism grammar for typescript!\");\n    const newHighlightedCodeInnerHtml = Prism.highlight(trimmedCode, grammar, \"typescript\");\n    setHighlightedCodeInnerHtml(newHighlightedCodeInnerHtml);\n  }, [trimmedCode]);\n  return <pre className=\"language-typescript\">\n\t\t\t<code dangerouslySetInnerHTML={{\n      __html: highlightedCodeInnerHtml\n    }} />\n\t\t</pre>;\n};\n_s(FuncPropType, \"A3eZdQWPzY43vvWTg2s/UGKpUFY=\");\n_c12 = FuncPropType;\nexport const UndefinedPropType = () => <span className=\"italic text-amber-600\">undefined</span>;\n_c13 = UndefinedPropType;\nexport const NullPropType = () => <span className=\"italic text-amber-600\">null</span>;\n_c14 = NullPropType;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14;\n$RefreshReg$(_c, \"PropsTable\");\n$RefreshReg$(_c2, \"PropRow\");\n$RefreshReg$(_c3, \"PropNameCell\");\n$RefreshReg$(_c4, \"PropTypeCell\");\n$RefreshReg$(_c5, \"PropDefaultValueCell\");\n$RefreshReg$(_c6, \"PropDescriptionCell\");\n$RefreshReg$(_c7, \"ObjectPropType\");\n$RefreshReg$(_c8, \"ReactNodePropType\");\n$RefreshReg$(_c9, \"BooleanPropType\");\n$RefreshReg$(_c10, \"StringPropType\");\n$RefreshReg$(_c11, \"NumberPropType\");\n$RefreshReg$(_c12, \"FuncPropType\");\n$RefreshReg$(_c13, \"UndefinedPropType\");\n$RefreshReg$(_c14, \"NullPropType\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["Prism"]
}
