{
  "version": 3,
  "sources": ["../../../packages/hooks/src/use-isomorphic-layout-effect.tsx", "../../../packages/hooks/src/use-prefers-reduced-motion.tsx", "../../../packages/hooks/src/use-random-stable-id.tsx"],
  "sourcesContent": ["import { useEffect, useLayoutEffect } from \"react\";\n\n/**\n * useIsomorphicLayoutEffect is a hook that uses useLayoutEffect on the client and useEffect on the server.\n */\nexport const useIsomorphicLayoutEffect = typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n", "import { useEffect, useState } from \"react\";\n\n/**\n * no-preference is the default value for the prefers-reduced-motion media query.\n * Users who have never fiddled with their a11y settings will still see animations\n * (no explicit opt-in required from a user's perspective)\n */\nconst query = \"(prefers-reduced-motion: no-preference)\";\n\n/**\n * usePrefersReducedMotion returns true if the user has opted out of animations\n */\nexport function usePrefersReducedMotion() {\n\t// default to no animations, since we don't know what the user's preference is on the server\n\tconst [prefersReducedMotion, setPrefersReducedMotion] = useState(true);\n\n\tuseEffect(() => {\n\t\tconst mediaQueryList = window.matchMedia(query);\n\n\t\t// set the _real_ initial value now that we're on the client\n\t\tsetPrefersReducedMotion(!mediaQueryList.matches);\n\n\t\t// register for updates\n\t\tfunction listener(event: MediaQueryListEvent) {\n\t\t\tsetPrefersReducedMotion(!event.matches);\n\t\t}\n\n\t\tmediaQueryList.addEventListener(\"change\", listener);\n\n\t\treturn () => {\n\t\t\tmediaQueryList.removeEventListener(\"change\", listener);\n\t\t};\n\t}, []);\n\n\treturn prefersReducedMotion;\n}\n", "import { useMemo } from \"react\";\n\n/**\n * Hook to generate a random, stable id.\n * This is similar to `useId`, but generates a stable id client side which can also\n * be used for css selectors and element ids.\n */\nconst useRandomStableId = (prefix: string = \"mantle\") => useMemo(() => randomStableId(prefix), [prefix]);\n\nexport {\n\t//,\n\tuseRandomStableId,\n};\n\nfunction randomStableId(prefix: string = \"mantle\") {\n\tconst _prefix = prefix.trim() || \"mantle\";\n\treturn [_prefix, randomPostfix()].join(\"-\");\n}\n\nfunction randomPostfix() {\n\treturn Math.random().toString(36).substring(2, 9);\n}\n"],
  "mappings": ";;;;;;;;AAAA,mBAA2C;AAKpC,IAAM,4BAA4B,OAAO,WAAW,cAAc,+BAAkB;;;ACL3F,IAAAA,gBAAoC;AAOpC,IAAM,QAAQ;AAKP,SAAS,0BAA0B;AAEzC,QAAM,CAAC,sBAAsB,uBAAuB,QAAI,wBAAS,IAAI;AAErE,+BAAU,MAAM;AACf,UAAM,iBAAiB,OAAO,WAAW,KAAK;AAG9C,4BAAwB,CAAC,eAAe,OAAO;AAG/C,aAAS,SAAS,OAA4B;AAC7C,8BAAwB,CAAC,MAAM,OAAO;AAAA,IACvC;AAEA,mBAAe,iBAAiB,UAAU,QAAQ;AAElD,WAAO,MAAM;AACZ,qBAAe,oBAAoB,UAAU,QAAQ;AAAA,IACtD;AAAA,EACD,GAAG,CAAC,CAAC;AAEL,SAAO;AACR;;;ACnCA,IAAAC,gBAAwB;AAOxB,IAAM,oBAAoB,CAAC,SAAiB,iBAAa,uBAAQ,MAAM,eAAe,MAAM,GAAG,CAAC,MAAM,CAAC;AAOvG,SAAS,eAAe,SAAiB,UAAU;AAClD,QAAM,UAAU,OAAO,KAAK,KAAK;AACjC,SAAO,CAAC,SAAS,cAAc,CAAC,EAAE,KAAK,GAAG;AAC3C;AAEA,SAAS,gBAAgB;AACxB,SAAO,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU,GAAG,CAAC;AACjD;",
  "names": ["import_react", "import_react"]
}
