{
  "version": 3,
  "sources": ["../../../app/components/link.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/link.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/link.tsx\");\n  import.meta.hot.lastModified = \"1724091104711.7554\";\n}\n// REMIX HMR END\n\nimport { Anchor } from \"@/anchor\";\nimport { Link as RRLink } from \"@remix-run/react\";\nexport const Link = ({\n  hash,\n  rawTo,\n  search,\n  to,\n  ...props\n}) => <Anchor asChild>\n\t\t<RRLink to={{\n    pathname: to ?? rawTo,\n    search,\n    hash\n  }} {...props} />\n\t</Anchor>;\n_c = Link;\nvar _c;\n$RefreshReg$(_c, \"Link\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;AA6BE;AA5BF,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8BAAgC,EAAE;AAAA,EAC3E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyB;AACzB,cAAY,IAAI,eAAe;AACjC;AAKO,IAAMA,QAAO,CAAC;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,MAAM,mDAAC,UAAO,SAAO,MACnB,6DAAC,QAAO,IAAI;AAAA,EACV,UAAU,MAAM;AAAA,EAChB;AAAA,EACA;AACF,GAAI,GAAG,SAJP;AAAA;AAAA;AAAA;AAAA,OAIc,KALV;AAAA;AAAA;AAAA;AAAA,OAML;AACD,KAAKA;AACL,IAAI;AACJ,aAAa,IAAI,MAAM;AAEvB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["Link"]
}
