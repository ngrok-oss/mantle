{
  "version": 3,
  "sources": ["../../../packages/progress/src/progress-donut.tsx", "../../../app/routes/components.progress-donut.tsx"],
  "sourcesContent": ["import clsx from \"clsx\";\nimport { createContext, useContext, useMemo } from \"react\";\nimport type { HTMLAttributes } from \"react\";\nimport { cx } from \"../../cx\";\nimport { useRandomStableId } from \"../../hooks\";\nimport type { WithStyleProps } from \"../../types\";\n\ntype RemValue = `${number}rem`;\ntype StrokeWidth = number | RemValue;\ntype ValueType = number | \"indeterminate\";\n\n/**\n * The default maximum value of the progress bar.\n */\nconst defaultMax = 100;\n\n/**\n * The size of the viewbox for the progress bar svg.\n */\nconst viewboxSize = 32;\n\ntype ProgressContextValue = {\n\tmax: number;\n\tradius: number;\n\tstrokeWidth: StrokeWidth;\n\tvalue: ValueType;\n};\n\nconst ProgressContext = createContext<ProgressContextValue>({\n\tmax: defaultMax,\n\tradius: 16,\n\tstrokeWidth: \"0.25rem\",\n\tvalue: 0,\n});\n\ntype SvgAttributes = Omit<\n\tHTMLAttributes<SVGElement>,\n\t\"viewBox\" | \"role\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\"\n>;\n\ntype Props = SvgAttributes & {\n\t/**\n\t * The maximum value of the progress bar.\n\t * This attribute describes how much work the task indicated by the progress element requires.\n\t * The max attribute, if present, must have a value greater than 0. The default value is 100.\n\t *\n\t * @default 100\n\t */\n\tmax?: number | undefined;\n\t/**\n\t * The width of the progress bar stroke.\n\t * Note, we clamp the stroke width to a minimum of 1px and max of 12px since\n\t * it is proportional to the viewbox size (0 0 32 32).\n\t *\n\t * @default 0.25rem (4px)\n\t */\n\tstrokeWidth?: StrokeWidth;\n\t/**\n\t * The current value of the progress bar.\n\t * This attribute specifies how much of the task that has been completed.\n\t * It must be a valid floating point number between 0 and max, or between 0 and 100 if max is omitted.\n\t * If set to `\"indeterminate\"`, the progress bar is considered indeterminate.\n\t *\n\t * @default 0\n\t */\n\tvalue?: ValueType | undefined;\n};\n\n/**\n * A simple circular progress bar.\n */\nconst ProgressDonut = ({\n\tchildren,\n\tclassName,\n\tmax: _max = defaultMax,\n\tstrokeWidth: _strokeWidth = 4,\n\tstyle,\n\tvalue: _value,\n\t...props\n}: Props) => {\n\tconst max = isValidMaxNumber(_max) ? _max : defaultMax;\n\tconst value = (isValidValueNumber(_value, max) ? _value : _value == null ? 0 : \"indeterminate\") satisfies ValueType;\n\tconst strokeWidthPx = deriveStrokeWidthPx(_strokeWidth);\n\tconst strokeWidthRem = pxToRem(strokeWidthPx);\n\tconst radius = circleRadius(strokeWidthPx);\n\tconst valueNow = isNumber(value) ? value : undefined;\n\n\tconst ctx: ProgressContextValue = useMemo(\n\t\t() => ({\n\t\t\tmax,\n\t\t\tradius,\n\t\t\tstrokeWidth: strokeWidthRem,\n\t\t\tvalue,\n\t\t}),\n\t\t[max, radius, strokeWidthRem, value],\n\t);\n\n\treturn (\n\t\t<ProgressContext.Provider value={ctx}>\n\t\t\t<svg\n\t\t\t\taria-valuemax={max}\n\t\t\t\taria-valuemin={0}\n\t\t\t\taria-valuenow={valueNow}\n\t\t\t\tclassName={clsx(\n\t\t\t\t\t\"origin-center\",\n\t\t\t\t\tvalue === \"indeterminate\" && \"animate-spin\",\n\t\t\t\t\tvalue !== \"indeterminate\" && \"-rotate-90 transform-gpu\",\n\t\t\t\t\tcx(\"size-6 text-gray-200 animation-duration-[15s] dark:text-gray-300\", className),\n\t\t\t\t)}\n\t\t\t\tdata-max={max}\n\t\t\t\tdata-min={0}\n\t\t\t\tdata-value={valueNow}\n\t\t\t\trole=\"progressbar\"\n\t\t\t\tviewBox={`0 0 ${viewboxSize} ${viewboxSize}`}\n\t\t\t\tstyle={{\n\t\t\t\t\t\"--spin-start-deg\": \"45deg\",\n\t\t\t\t\t\"--spin-end-deg\": \"405deg\",\n\t\t\t\t}}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<circle\n\t\t\t\t\tcx={viewboxSize / 2}\n\t\t\t\t\tcy={viewboxSize / 2}\n\t\t\t\t\tfill=\"transparent\"\n\t\t\t\t\tr={radius}\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstrokeWidth={pxToRem(strokeWidthPx)}\n\t\t\t\t/>\n\t\t\t\t{children}\n\t\t\t</svg>\n\t\t</ProgressContext.Provider>\n\t);\n};\n\n/**\n * Length (value) of the progress indicator tail when the progress bar is indeterminate.\n */\nconst indeterminateTailPercent = 0.6;\n\ntype ProgressDonutIndicatorProps = WithStyleProps;\n\n/**\n * The indicator for the circular progress bar.\n */\nconst ProgressDonutIndicator = ({ className, style }: ProgressDonutIndicatorProps) => {\n\tconst gradientId = useRandomStableId();\n\tconst ctx = useContext(ProgressContext);\n\tconst circumferenceValue = circumference(ctx.radius);\n\tconst progressValue = ctx.value == \"indeterminate\" ? indeterminateTailPercent : ctx.value / ctx.max;\n\n\treturn (\n\t\t<g className={cx(\"text-accent-600\", className)} style={style}>\n\t\t\t{ctx.value == \"indeterminate\" && (\n\t\t\t\t<defs>\n\t\t\t\t\t<linearGradient id={gradientId}>\n\t\t\t\t\t\t<stop className=\"stop-opacity-100 stop-color-current\" offset=\"0%\" />\n\t\t\t\t\t\t<stop className=\"stop-opacity-0 stop-color-current\" offset=\"95%\" />\n\t\t\t\t\t</linearGradient>\n\t\t\t\t</defs>\n\t\t\t)}\n\t\t\t<circle\n\t\t\t\tcx={viewboxSize / 2}\n\t\t\t\tcy={viewboxSize / 2}\n\t\t\t\tfill=\"transparent\"\n\t\t\t\tr={ctx.radius}\n\t\t\t\tstroke={ctx.value == \"indeterminate\" ? `url(#${gradientId})` : \"currentColor\"}\n\t\t\t\tstrokeDasharray={circumferenceValue}\n\t\t\t\tstrokeDashoffset={`${(1 - progressValue) * circumferenceValue}px`}\n\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\tstrokeWidth={ctx.strokeWidth}\n\t\t\t/>\n\t\t</g>\n\t);\n};\n\nexport {\n\t//,\n\tProgressDonut,\n\tProgressDonutIndicator,\n};\n\n/**\n * Calculate the radius of a circle given the stroke width.\n * The radius is calculated as half the viewbox size minus half the stroke width\n * so that the stroke doesn't clamp within the viewbox.\n */\nfunction circleRadius(strokeWidth: number): number {\n\tconst value = Number.isNaN(strokeWidth) ? 4 : strokeWidth;\n\t// clamp the stroke width to a minimum of 1 and max of 16 non-inclusive on both sides\n\tconst clampedStrokeWidth = clamp(value, { min: 1, max: 16 });\n\treturn (viewboxSize - clampedStrokeWidth) / 2;\n}\n\nfunction clamp(value: number, { min, max }: { min: number; max: number }): number {\n\treturn Math.min(max, Math.max(min, value));\n}\n\n/**\n * Convert a pixel value to a rem value.\n */\nfunction pxToRem(value: number): RemValue {\n\treturn `${value / 16}rem` as RemValue;\n}\n\n/**\n * Derive the stroke width in pixels as a number value or pixels/rem from a string value.\n * Note, this function clamps the stroke width to a minimum of 1 and max of 12 since\n * it is proportional to the viewbox size (0 0 32 32).\n */\nexport function deriveStrokeWidthPx(strokeWidth: number | string | undefined): number {\n\tlet value = 4;\n\tif (strokeWidth == null) {\n\t\treturn value;\n\t}\n\n\tif (typeof strokeWidth === \"number\") {\n\t\tvalue = strokeWidth;\n\t} else if (strokeWidth.endsWith(\"rem\")) {\n\t\tvalue = Number(strokeWidth.replace(\"rem\", \"\")) * 16;\n\t} else {\n\t\tvalue = Number(strokeWidth);\n\t}\n\n\tconst stroke = Number.isNaN(value) ? 4 : value;\n\treturn clamp(stroke, { min: 1, max: 12 });\n}\n\n/**\n * Calculate the circumference of a circle given its radius.\n * C = 2\u03C0r\n */\nfunction circumference(radius: number) {\n\treturn 2 * Math.PI * radius;\n}\n\n/**\n * Check if a value is a number.\n */\nfunction isNumber(value: unknown): value is number {\n\treturn typeof value === \"number\";\n}\n\n/**\n * Check if a value is a valid number within the range of 0 to `max`.\n */\nfunction isValidValueNumber(value: unknown, max: number): value is number {\n\treturn isNumber(value) && !Number.isNaN(value) && value <= max && value >= 0;\n}\n\n/**\n * Check if a value is a valid number greater than 0.\n */\nfunction isValidMaxNumber(value: unknown): value is number {\n\treturn isNumber(value) && !Number.isNaN(value) && value > 0;\n}\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/components.progress-donut.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/components.progress-donut.tsx\");\n  import.meta.hot.lastModified = \"1724091104715.6104\";\n}\n// REMIX HMR END\n\nimport { Anchor } from \"@/anchor\";\nimport { CodeBlock, CodeBlockBody, CodeBlockCode, CodeBlockCopyButton, fmtCode } from \"@/code-block\";\nimport { InlineCode } from \"@/inline-code\";\nimport { ProgressDonut, ProgressDonutIndicator } from \"@/progress\";\nimport { Example } from \"~/components/example\";\nimport { NumberPropType, PropDefaultValueCell, PropDescriptionCell, PropNameCell, PropRow, PropsTable, PropTypeCell, StringPropType } from \"~/components/props-table\";\nimport { useState } from \"react\";\nexport const meta = () => {\n  return [{\n    title: \"@ngrok/mantle \u2014 Progress Donut\"\n  }, {\n    name: \"description\",\n    content: \"mantle is ngrok's UI library and design system\"\n  }];\n};\nexport const headers = () => {\n  return {\n    \"Cache-Control\": \"max-age=300, stale-while-revalidate=604800\"\n  };\n};\nexport default function Page() {\n  return <div className=\"space-y-16\">\n\t\t\t<div className=\"space-y-4\">\n\t\t\t\t<h1 className=\"text-5xl font-medium\">Progress Donut</h1>\n\t\t\t\t<p className=\"font-body text-xl text-body\">\n\t\t\t\t\tDisplays an indicator showing the completion progress of a task as a circular progress bar.\n\t\t\t\t</p>\n\t\t\t\t<p className=\"font-body text-xl text-body\">\n\t\t\t\t\tThe indicator color is inherited via <InlineCode>currentColor</InlineCode>. Override the default (\n\t\t\t\t\t<InlineCode>accent-600</InlineCode>) by setting the\n\t\t\t\t\t<InlineCode>ProgressDonutIndicator</InlineCode>'s text color.\n\t\t\t\t</p>\n\t\t\t\t<div>\n\t\t\t\t\t<Example className=\"flex-col gap-6\">\n\t\t\t\t\t\t<ProgressDonut value={60} className=\"size-10\">\n\t\t\t\t\t\t\t<ProgressDonutIndicator />\n\t\t\t\t\t\t</ProgressDonut>\n\n\t\t\t\t\t\t<ProgressDonut value={60} className=\"size-10\">\n\t\t\t\t\t\t\t<ProgressDonutIndicator className=\"text-fuchsia-600\" />\n\t\t\t\t\t\t</ProgressDonut>\n\n\t\t\t\t\t\t<div className=\"flex flex-col gap-2\">\n\t\t\t\t\t\t\t<div className=\"flex items-center gap-1.5 text-sm\">\n\t\t\t\t\t\t\t\t<ProgressDonut value={100} className=\"size-6\">\n\t\t\t\t\t\t\t\t\t<ProgressDonutIndicator />\n\t\t\t\t\t\t\t\t</ProgressDonut>\n\t\t\t\t\t\t\t\tData transfer out\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"flex items-center gap-1.5 text-xs\">\n\t\t\t\t\t\t\t\t<div className=\"grid w-6 place-items-center\">\n\t\t\t\t\t\t\t\t\t<ProgressDonut value={100} className=\"size-4\" strokeWidth=\"0.315rem\">\n\t\t\t\t\t\t\t\t\t\t<ProgressDonutIndicator />\n\t\t\t\t\t\t\t\t\t</ProgressDonut>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\tIncluded\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"flex items-center gap-1.5 text-xs\">\n\t\t\t\t\t\t\t\t<div className=\"grid w-6 place-items-center\">\n\t\t\t\t\t\t\t\t\t<ProgressDonut className=\"size-4\" value=\"indeterminate\" strokeWidth=\"0.315rem\">\n\t\t\t\t\t\t\t\t\t\t<ProgressDonutIndicator />\n\t\t\t\t\t\t\t\t\t</ProgressDonut>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\tAdditional\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Example>\n\t\t\t\t\t<CodeBlock className=\"rounded-b-lg rounded-t-none\">\n\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t<CodeBlockCopyButton />\n\t\t\t\t\t\t\t<CodeBlockCode language=\"tsx\" value={fmtCode`\n\t\t\t\t\t\t\t\t\timport { ProgressDonut, ProgressDonutIndicator } from \"@ngrok/mantle/progress\";\n\n\t\t\t\t\t\t\t\t\t<ProgressDonut value={60} className=\"size-10\">\n\t\t\t\t\t\t\t\t\t\t<ProgressDonutIndicator />\n\t\t\t\t\t\t\t\t\t</ProgressDonut>\n\n\t\t\t\t\t\t\t\t\t<ProgressDonut value={60} className=\"size-10\">\n\t\t\t\t\t\t\t\t\t\t<ProgressDonutIndicator className=\"text-fuchsia-600\" />\n\t\t\t\t\t\t\t\t\t</ProgressDonut>\n\n\t\t\t\t\t\t\t\t\t<div className=\"flex flex-col gap-2\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"flex items-center gap-1.5 text-sm\">\n\t\t\t\t\t\t\t\t\t\t\t<ProgressDonut value={100} className=\"size-6\">\n\t\t\t\t\t\t\t\t\t\t\t\t<ProgressDonutIndicator />\n\t\t\t\t\t\t\t\t\t\t\t</ProgressDonut>\n\t\t\t\t\t\t\t\t\t\t\tData transfer out\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<div className=\"flex items-center gap-1.5 text-xs\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"grid w-6 place-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<ProgressDonut value={100} className=\"size-4\" strokeWidth=\"0.315rem\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ProgressDonutIndicator />\n\t\t\t\t\t\t\t\t\t\t\t\t</ProgressDonut>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\tIncluded\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<div className=\"flex items-center gap-1.5 text-xs\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"grid w-6 place-items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<ProgressDonut value={25} className=\"size-4\" strokeWidth=\"0.315rem\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ProgressDonutIndicator className=\"text-success-600\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</ProgressDonut>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\tAdditional\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t`} />\n\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t</CodeBlock>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<section className=\"space-y-4\">\n\t\t\t\t<h2 id=\"indeterminate\" className=\"text-3xl font-medium\">\n\t\t\t\t\tIndeterminate Value\n\t\t\t\t</h2>\n\t\t\t\t<p className=\"font-body text-xl text-body\">\n\t\t\t\t\tYou can set the <InlineCode>value</InlineCode> prop to <InlineCode>\"indeterminate\"</InlineCode> to show the\n\t\t\t\t\tprogress bar in an indeterminate state.\n\t\t\t\t</p>\n\t\t\t\t<div>\n\t\t\t\t\t<Example>\n\t\t\t\t\t\t<ProgressDonut className=\"size-10\" value=\"indeterminate\">\n\t\t\t\t\t\t\t<ProgressDonutIndicator />\n\t\t\t\t\t\t</ProgressDonut>\n\t\t\t\t\t</Example>\n\t\t\t\t\t<CodeBlock className=\"rounded-b-lg rounded-t-none\">\n\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t<CodeBlockCopyButton />\n\t\t\t\t\t\t\t<CodeBlockCode language=\"tsx\" value={fmtCode`\n\t\t\t\t\t\t\t\t\timport { ProgressDonut, ProgressDonutIndicator } from \"@ngrok/mantle/progress\";\n\n\t\t\t\t\t\t\t\t\t<ProgressDonut className=\"size-10\" value=\"indeterminate\">\n\t\t\t\t\t\t\t\t\t\t<ProgressDonutIndicator />\n\t\t\t\t\t\t\t\t\t</ProgressDonut>\n\t\t\t\t\t\t\t\t`} />\n\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t</CodeBlock>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section className=\"space-y-4\">\n\t\t\t\t<h2 id=\"dynamic-colors\" className=\"text-3xl font-medium\">\n\t\t\t\t\tDynamic Colors\n\t\t\t\t</h2>\n\t\t\t\t<p className=\"font-body text-xl text-body\">\n\t\t\t\t\tThe color of the <InlineCode>ProgressDonutIndicator</InlineCode> is inherited from the parent text color using{\" \"}\n\t\t\t\t\t<InlineCode>currentColor</InlineCode>. Using this, you can easily change the color of it based on the current\n\t\t\t\t\tprogress value.\n\t\t\t\t</p>\n\t\t\t\t<div>\n\t\t\t\t\t<Example>\n\t\t\t\t\t\t<div className=\"min-w-72\">\n\t\t\t\t\t\t\t<DynamicColorsExample />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Example>\n\t\t\t\t\t<CodeBlock className=\"rounded-b-lg rounded-t-none\">\n\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t<CodeBlockCopyButton />\n\t\t\t\t\t\t\t<CodeBlockCode language=\"tsx\" value={fmtCode`\n\t\t\t\t\t\t\t\t\timport { ProgressDonut, ProgressDonutIndicator } from \"@ngrok/mantle/progress\";\n\n\t\t\t\t\t\t\t\t\tconst Example = () => {\n\t\t\t\t\t\t\t\t\t\tconst [value, setValue] = useState(0);\n\n\t\t\t\t\t\t\t\t\t\tfunction computeColor() {\n\t\t\t\t\t\t\t\t\t\t\tswitch (true) {\n\t\t\t\t\t\t\t\t\t\t\t\tcase value <= 20:\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"text-accent-600\";\n\t\t\t\t\t\t\t\t\t\t\t\tcase value <= 40:\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"text-success-600\";\n\t\t\t\t\t\t\t\t\t\t\t\tcase value <= 60:\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"text-warning-600\";\n\t\t\t\t\t\t\t\t\t\t\t\tcase value <= 80:\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"text-fuchsia-600\";\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"text-danger-600\";\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<form className=\"space-y-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t<ProgressDonut value={value} className=\"size-10\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ProgressDonutIndicator className={computeColor()} />\n\t\t\t\t\t\t\t\t\t\t\t\t</ProgressDonut>\n\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"block space-y-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>Value:</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"range\" min={0} max={100} value={value} onChange={(e) => setValue(Number(e.target.value))} /> (\n\t\t\t\t\t\t\t\t\t\t\t\t\t{value}%)\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t`} />\n\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t</CodeBlock>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section className=\"space-y-4\">\n\t\t\t\t<h2 id=\"api\" className=\"text-3xl font-medium\">\n\t\t\t\t\tAPI Reference\n\t\t\t\t</h2>\n\t\t\t\t<p className=\"font-body text-xl text-body\">\n\t\t\t\t\tThe <InlineCode>ProgressDonut</InlineCode> accepts the following props in addition to the{\" \"}\n\t\t\t\t\t<Anchor href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg#attributes\">\n\t\t\t\t\t\tstandard HTML svg attributes\n\t\t\t\t\t</Anchor>\n\t\t\t\t\t.\n\t\t\t\t</p>\n\t\t\t\t<PropsTable>\n\t\t\t\t\t<PropRow>\n\t\t\t\t\t\t<PropNameCell name=\"max\" optional />\n\t\t\t\t\t\t<PropTypeCell>\n\t\t\t\t\t\t\t<NumberPropType />\n\t\t\t\t\t\t</PropTypeCell>\n\t\t\t\t\t\t<PropDefaultValueCell>\n\t\t\t\t\t\t\t<NumberPropType value={100} />\n\t\t\t\t\t\t</PropDefaultValueCell>\n\t\t\t\t\t\t<PropDescriptionCell>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tThe maximum value of the progress bar. This attribute describes how much work the task indicated by the\n\t\t\t\t\t\t\t\tprogress element requires. The max attribute, if present, must have a value greater than 0. The default\n\t\t\t\t\t\t\t\tvalue is 100.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</PropDescriptionCell>\n\t\t\t\t\t</PropRow>\n\t\t\t\t\t<PropRow>\n\t\t\t\t\t\t<PropNameCell name=\"strokeWidth\" optional />\n\t\t\t\t\t\t<PropTypeCell>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<NumberPropType />\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<StringPropType value=\"`${number}rem`\" />\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</PropTypeCell>\n\t\t\t\t\t\t<PropDefaultValueCell>\n\t\t\t\t\t\t\t<StringPropType value=\"0.25rem\" />\n\t\t\t\t\t\t</PropDefaultValueCell>\n\t\t\t\t\t\t<PropDescriptionCell>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tThe width of the progress bar stroke. Note, we clamp the stroke width to a minimum of 1px and max of\n\t\t\t\t\t\t\t\t12px since it is proportional to the viewbox size (0 0 32 32).\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</PropDescriptionCell>\n\t\t\t\t\t</PropRow>\n\t\t\t\t\t<PropRow>\n\t\t\t\t\t\t<PropNameCell name=\"value\" optional />\n\t\t\t\t\t\t<PropTypeCell>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<NumberPropType />\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<StringPropType value=\"indeterminate\" />\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</PropTypeCell>\n\t\t\t\t\t\t<PropDefaultValueCell>\n\t\t\t\t\t\t\t<NumberPropType value={0} />\n\t\t\t\t\t\t</PropDefaultValueCell>\n\t\t\t\t\t\t<PropDescriptionCell className=\"space-y-2\">\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tThe current value of the progress bar. This attribute specifies how much of the task that has been\n\t\t\t\t\t\t\t\tcompleted. It must be a valid floating point number between 0 and max, or between 0 and 100 if max is\n\t\t\t\t\t\t\t\tomitted.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tIf set to <InlineCode>\"indeterminate\"</InlineCode>, the progress bar is considered{\" \"}\n\t\t\t\t\t\t\t\t<strong>indeterminate</strong>.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</PropDescriptionCell>\n\t\t\t\t\t</PropRow>\n\t\t\t\t</PropsTable>\n\t\t\t</section>\n\t\t</div>;\n}\n_c = Page;\nconst DynamicColorsExample = () => {\n  _s();\n  const [value, setValue] = useState(0);\n  function computeColor() {\n    switch (true) {\n      case value <= 20:\n        return \"text-accent-600\";\n      case value <= 40:\n        return \"text-success-600\";\n      case value <= 60:\n        return \"text-warning-600\";\n      case value <= 80:\n        return \"text-fuchsia-600\";\n      default:\n        return \"text-danger-600\";\n    }\n  }\n  return <form className=\"space-y-4\">\n\t\t\t<ProgressDonut value={value} className=\"size-10\">\n\t\t\t\t<ProgressDonutIndicator className={computeColor()} />\n\t\t\t</ProgressDonut>\n\t\t\t<label className=\"block space-y-1\">\n\t\t\t\t<p>Value:</p>\n\t\t\t\t<input type=\"range\" min={0} max={100} value={value} onChange={e => setValue(Number(e.target.value))} /> (\n\t\t\t\t{value}%)\n\t\t\t</label>\n\t\t</form>;\n};\n_s(DynamicColorsExample, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n_c2 = DynamicColorsExample;\nvar _c, _c2;\n$RefreshReg$(_c, \"Page\");\n$RefreshReg$(_c2, \"DynamicColorsExample\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime"]
}
