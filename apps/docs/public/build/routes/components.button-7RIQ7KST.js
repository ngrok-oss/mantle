import{a as i}from"/build/_shared/chunk-EFNGN3AP.js";import{a as P}from"/build/_shared/chunk-TRM4O6NC.js";import{d as C}from"/build/_shared/chunk-LXOI3BT3.js";import"/build/_shared/chunk-2SMIENYH.js";import{c as o}from"/build/_shared/chunk-3YZGYUY3.js";import"/build/_shared/chunk-LD7P7WUX.js";import"/build/_shared/chunk-AFUBJ33G.js";import"/build/_shared/chunk-UEOFND7X.js";import"/build/_shared/chunk-F4CGZL4B.js";import{a as k,b as l,c as a,d as r,e as p,f as d,h as N,i as f,j as n}from"/build/_shared/chunk-R6Q5KFLB.js";import"/build/_shared/chunk-OWVN64HW.js";import{a as g}from"/build/_shared/chunk-KNSIEFAX.js";import{a as e}from"/build/_shared/chunk-KK737ADX.js";import{c as x,d as I,e as w}from"/build/_shared/chunk-QLWHGWSQ.js";import"/build/_shared/chunk-4CQPBNMS.js";import"/build/_shared/chunk-D36BACC2.js";import"/build/_shared/chunk-YYUGFPNA.js";import"/build/_shared/chunk-B65FA2P7.js";import"/build/_shared/chunk-AN5AQZWP.js";import"/build/_shared/chunk-AFVJBJ7U.js";import"/build/_shared/chunk-YBB4Z6DW.js";import{a as y}from"/build/_shared/chunk-FSLJRMMD.js";import{c as s,d as u,e as c,h as m,j as h}from"/build/_shared/chunk-U623FORG.js";import"/build/_shared/chunk-WWFNUYL5.js";import"/build/_shared/chunk-UYLQA7CX.js";import"/build/_shared/chunk-5U3QKZBD.js";import"/build/_shared/chunk-3YTQ7E44.js";import"/build/_shared/chunk-I4CY5NX7.js";import{b as v}from"/build/_shared/chunk-SQBGVNFG.js";import{c as B}from"/build/_shared/chunk-QDA5CGMH.js";var t=B(v(),1),D=()=>[{title:"@ngrok/mantle \u2014 Button"},{name:"description",content:"mantle is ngrok's UI library and design system"}];var b=({children:T})=>(0,t.jsxs)(x,{children:[(0,t.jsx)(I,{asChild:!0,children:T}),(0,t.jsx)(w,{children:"Tooltips work on disabled buttons!"})]});function L(){return(0,t.jsxs)("div",{className:"space-y-16",children:[(0,t.jsxs)("section",{className:"space-y-4",children:[(0,t.jsx)("h1",{id:"button",className:"text-5xl font-medium",children:"Button"}),(0,t.jsx)("p",{className:"font-body text-body text-xl",children:"Initiates an action, such as completing a task or submitting information"}),(0,t.jsxs)("div",{children:[(0,t.jsxs)(y,{className:"flex flex-wrap gap-6",children:[(0,t.jsxs)("div",{children:[(0,t.jsx)("p",{className:"mb-2 text-center font-mono text-xs",children:"Default"}),(0,t.jsxs)("div",{className:"flex items-center gap-2",children:[(0,t.jsx)(o,{type:"button",appearance:"ghost",priority:"default",children:"Ghost"}),(0,t.jsx)(o,{type:"button",appearance:"filled",priority:"default",children:"Filled"}),(0,t.jsx)(o,{type:"button",appearance:"outlined",priority:"default",children:"Outlined"}),(0,t.jsx)(o,{type:"button",appearance:"link",priority:"default",children:"Link"})]})]}),(0,t.jsxs)("div",{children:[(0,t.jsx)("p",{className:"mb-2 text-center font-mono text-xs",children:"Neutral"}),(0,t.jsxs)("div",{className:"flex items-center gap-2",children:[(0,t.jsx)(o,{type:"button",appearance:"ghost",priority:"neutral",children:"Ghost"}),(0,t.jsx)(o,{type:"button",appearance:"filled",priority:"neutral",children:"Filled"}),(0,t.jsx)(o,{type:"button",appearance:"outlined",priority:"neutral",children:"Outlined"}),(0,t.jsx)(o,{type:"button",appearance:"link",priority:"neutral",children:"Link"})]})]}),(0,t.jsxs)("div",{children:[(0,t.jsx)("p",{className:"mb-2 text-center font-mono text-xs",children:"Danger"}),(0,t.jsxs)("div",{className:"flex items-center gap-2",children:[(0,t.jsx)(o,{type:"button",appearance:"ghost",priority:"danger",children:"Ghost"}),(0,t.jsx)(o,{type:"button",appearance:"filled",priority:"danger",children:"Filled"}),(0,t.jsx)(o,{type:"button",appearance:"outlined",priority:"danger",children:"Outlined"}),(0,t.jsx)(o,{type:"button",appearance:"link",priority:"danger",children:"Link"})]})]}),(0,t.jsxs)("div",{children:[(0,t.jsx)("p",{className:"mb-2 text-center font-mono text-xs",children:"Disabled"}),(0,t.jsxs)("div",{className:"flex items-center gap-2",children:[(0,t.jsx)(b,{children:(0,t.jsx)(o,{disabled:!0,type:"button",appearance:"ghost",priority:"default",children:"Ghost"})}),(0,t.jsx)(b,{children:(0,t.jsx)(o,{disabled:!0,type:"button",appearance:"filled",priority:"default",children:"Filled"})}),(0,t.jsx)(b,{children:(0,t.jsx)(o,{disabled:!0,type:"button",appearance:"outlined",priority:"default",children:"Outlined"})}),(0,t.jsx)(b,{children:(0,t.jsx)(o,{disabled:!0,type:"button",appearance:"link",priority:"default",children:"Link"})})]})]})]}),(0,t.jsx)(s,{className:"rounded-b-lg rounded-t-none",children:(0,t.jsxs)(u,{children:[(0,t.jsx)(m,{}),(0,t.jsx)(c,{language:"tsx",value:h`
									import { Button } from "@ngrok/mantle/button";

									<Button type="button">Outlined</Button>
									<Button type="button" appearance="filled">Filled</Button>
									<Button type="button" appearance="ghost">Ghost</Button>
									<Button type="button" appearance="link">Link</Button>

									<Button type="button" priority="neutral">Outlined</Button>
									<Button type="button" priority="neutral" appearance="filled">Filled</Button>
									<Button type="button" priority="neutral" appearance="ghost">Ghost</Button>
									<Button type="button" priority="neutral" appearance="link">Link</Button>

									<Button type="button" priority="danger">Outlined</Button>
									<Button type="button" priority="danger" appearance="filled">Filled</Button>
									<Button type="button" priority="danger" appearance="ghost">Ghost</Button>
									<Button type="button" priority="danger" appearance="link">Link</Button>

									<Button disabled type="button" appearance="ghost" priority="default">
										Ghost
									</Button>
									<Button disabled type="button" appearance="filled" priority="default">
										Filled
									</Button>
									<Button disabled type="button" appearance="outlined" priority="default">
										Outlined
									</Button>
									<Button disabled type="button" appearance="link" priority="default">
										Link
									</Button>
								`})]})})]})]}),(0,t.jsxs)("section",{className:"space-y-4",children:[(0,t.jsx)("h2",{id:"example-icon",className:"text-3xl font-medium",children:"Icon and Positioning"}),(0,t.jsxs)("p",{className:"font-body text-body text-xl",children:["Use the ",(0,t.jsx)(e,{children:"icon"})," prop to add an icon to the button. By default, it will render on the logical start side of the button. Use the ",(0,t.jsx)(e,{children:"iconPlacement"})," prop to change the side the icon is rendered on."]}),(0,t.jsxs)("div",{children:[(0,t.jsx)(y,{children:(0,t.jsxs)("div",{className:"flex items-center gap-2",children:[(0,t.jsx)(o,{type:"button",icon:(0,t.jsx)(i,{weight:"fill"}),children:"Icon Start"}),(0,t.jsx)(o,{type:"button",icon:(0,t.jsx)(i,{weight:"fill"}),iconPlacement:"end",children:"Icon End"})]})}),(0,t.jsx)(s,{className:"rounded-b-lg rounded-t-none",children:(0,t.jsxs)(u,{children:[(0,t.jsx)(m,{}),(0,t.jsx)(c,{language:"tsx",value:h`
									import { Button } from "@ngrok/mantle/button";
									import { Fire } from "@phosphor-icons/react";

									<Button type="button" icon={<Fire weight="fill" />}>Icon Start</Button>
									<Button type="button" icon={<Fire weight="fill" />} iconPlacement="end">
										Icon End
									</Button>
								`})]})})]})]}),(0,t.jsxs)("section",{className:"space-y-4",children:[(0,t.jsx)("h2",{id:"example-loading",className:"text-3xl font-medium",children:"isLoading"}),(0,t.jsxs)("p",{className:"font-body text-body text-xl",children:[(0,t.jsx)(e,{children:"isLoading"})," determines whether or not the button is in a loading state, default"," ",(0,t.jsx)(e,{children:"false"}),". Setting ",(0,t.jsx)(e,{children:"isLoading"})," will replace any"," ",(0,t.jsx)(e,{children:"icon"})," with a spinner, or add one if an icon wasn't given. It will also disable user interaction with the button and set ",(0,t.jsx)(e,{children:"aria-disabled"}),"."]}),(0,t.jsxs)("div",{children:[(0,t.jsxs)(y,{className:"flex-col gap-4",children:[(0,t.jsxs)("div",{className:"space-y-2",children:[(0,t.jsx)("p",{className:"mb-2 text-center font-mono text-xs",children:"Idle"}),(0,t.jsxs)("div",{className:"flex items-center justify-center gap-2",children:[(0,t.jsx)(o,{type:"button",children:"No Icon + Idle"}),(0,t.jsx)(o,{type:"button",icon:(0,t.jsx)(i,{weight:"fill"}),children:"Icon Start + Idle"}),(0,t.jsx)(o,{type:"button",icon:(0,t.jsx)(i,{weight:"fill"}),iconPlacement:"end",children:"Icon End + Idle"})]}),(0,t.jsxs)("div",{className:"flex items-center justify-center gap-2",children:[(0,t.jsx)(o,{type:"button",appearance:"link",icon:(0,t.jsx)(i,{weight:"fill"}),children:"Link + Icon Start + Idle"}),(0,t.jsx)(o,{type:"button",appearance:"link",icon:(0,t.jsx)(i,{weight:"fill"}),iconPlacement:"end",children:"Link + Icon End + Idle"})]})]}),(0,t.jsxs)("div",{className:"space-y-2",children:[(0,t.jsx)("p",{className:"mb-2 text-center font-mono text-xs",children:"isLoading"}),(0,t.jsxs)("div",{className:"flex items-center justify-center gap-2",children:[(0,t.jsx)(o,{type:"button",isLoading:!0,children:"No Icon + isLoading"}),(0,t.jsx)(o,{type:"button",icon:(0,t.jsx)(i,{weight:"fill"}),isLoading:!0,children:"Icon Start + isLoading"}),(0,t.jsx)(o,{type:"button",icon:(0,t.jsx)(i,{weight:"fill"}),iconPlacement:"end",isLoading:!0,children:"Icon End + isLoading"})]}),(0,t.jsxs)("div",{className:"flex items-center justify-center gap-2",children:[(0,t.jsx)(o,{type:"button",appearance:"link",icon:(0,t.jsx)(i,{weight:"fill"}),isLoading:!0,children:"Link + Icon Start + isLoading"}),(0,t.jsx)(o,{type:"button",appearance:"link",icon:(0,t.jsx)(i,{weight:"fill"}),iconPlacement:"end",isLoading:!0,children:"Link + Icon End + isLoading"})]})]})]}),(0,t.jsx)(s,{className:"rounded-b-lg rounded-t-none",children:(0,t.jsxs)(u,{children:[(0,t.jsx)(m,{}),(0,t.jsx)(c,{language:"tsx",value:h`
									import { Button } from "@ngrok/mantle/button";
									import { Fire } from "@phosphor-icons/react";

									<Button type="button">No Icon + Idle</Button>
									<Button type="button" icon={<Fire weight="fill" />}>Icon Start + Idle</Button>
									<Button type="button" icon={<Fire weight="fill" />} iconPlacement="end">
										Icon End + Idle
									</Button>
									<Button type="button" isLoading>No Icon + isLoading</Button>
									<Button type="button" icon={<Fire weight="fill" />} isLoading>
										Icon Start + isLoading
									</Button>
									<Button type="button" icon={<Fire weight="fill" />} iconPlacement="end" isLoading>
										Icon End + isLoading
									</Button>
								`})]})})]})]}),(0,t.jsxs)("section",{className:"space-y-4",children:[(0,t.jsx)("h2",{id:"composition",className:"text-3xl font-medium",children:"Composition"}),(0,t.jsxs)("p",{className:"font-body text-body text-xl",children:["When you want to render ",(0,t.jsx)("span",{className:"italic",children:"something else"})," as a ",(0,t.jsx)(e,{children:"Button"}),", you can use the ",(0,t.jsx)(e,{children:"asChild"})," prop to compose. This is useful when you want to splat the"," ",(0,t.jsx)(e,{children:"Button"})," styling onto a ",(0,t.jsx)(e,{children:"Link"})," from"," ",(0,t.jsx)(e,{children:"remix"})," or ",(0,t.jsx)(e,{children:"react-router"}),". Keep in mind that when you use"," ",(0,t.jsx)(e,{children:"asChild"})," the ",(0,t.jsx)(e,{children:"type"})," prop will ",(0,t.jsx)("strong",{children:"NOT"})," be passed to the child component."]}),(0,t.jsxs)("div",{children:[(0,t.jsx)(y,{children:(0,t.jsx)(o,{appearance:"filled",icon:(0,t.jsx)(i,{weight:"fill"}),asChild:!0,children:(0,t.jsx)(C,{to:P("/base/colors"),children:"See our colors!"})})}),(0,t.jsx)(s,{className:"rounded-b-lg rounded-t-none",children:(0,t.jsxs)(u,{children:[(0,t.jsx)(m,{}),(0,t.jsx)(c,{language:"tsx",value:h`
									import { Button } from "@ngrok/mantle/button";
									import { Fire } from "@phosphor-icons/react";
									import { Link } from "react-router-dom";

									<Button appearance="filled" icon={<Fire weight="fill" />} asChild>
										<Link to="/base/colors">See our colors!</Link>
									</Button>
								`})]})})]})]}),(0,t.jsxs)("section",{className:"space-y-4",children:[(0,t.jsx)("h2",{id:"api",className:"text-3xl font-medium",children:"API Reference"}),(0,t.jsxs)("p",{className:"font-body text-body text-xl",children:["The ",(0,t.jsx)(e,{children:"Button"})," accepts the following props in addition to the"," ",(0,t.jsx)(g,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button",children:"standard HTML button attributes"}),"."]}),(0,t.jsxs)(k,{children:[(0,t.jsxs)(l,{children:[(0,t.jsx)(a,{name:"appearance",optional:!0}),(0,t.jsx)(r,{children:(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{children:(0,t.jsx)(n,{value:"ghost"})}),(0,t.jsx)("li",{children:(0,t.jsx)(n,{value:"filled"})}),(0,t.jsx)("li",{children:(0,t.jsx)(n,{value:"outlined"})}),(0,t.jsx)("li",{children:(0,t.jsx)(n,{value:"link"})})]})}),(0,t.jsx)(p,{children:(0,t.jsx)(n,{value:"outlined"})}),(0,t.jsx)(d,{children:(0,t.jsxs)("p",{children:["Defines the visual style of the ",(0,t.jsx)(e,{children:"Button"}),"."]})})]}),(0,t.jsxs)(l,{children:[(0,t.jsx)(a,{name:"asChild",optional:!0}),(0,t.jsx)(r,{children:(0,t.jsx)(f,{})}),(0,t.jsx)(p,{children:(0,t.jsx)(f,{value:!1})}),(0,t.jsx)(d,{children:(0,t.jsxs)("p",{children:["Use the ",(0,t.jsx)(e,{children:"asChild"})," prop to compose the ",(0,t.jsx)(e,{children:"Button"})," styling and functionality onto alternative element types or your own React components."]})})]}),(0,t.jsxs)(l,{children:[(0,t.jsx)(a,{name:"icon",optional:!0}),(0,t.jsx)(r,{children:(0,t.jsx)(N,{})}),(0,t.jsx)(p,{}),(0,t.jsxs)(d,{children:["An icon to render inside the button. If the ",(0,t.jsx)(e,{children:"state"})," is"," ",(0,t.jsx)(e,{children:"pending"}),", then the icon will automatically be replaced with a spinner."]})]}),(0,t.jsxs)(l,{children:[(0,t.jsx)(a,{name:"iconPlacement",optional:!0}),(0,t.jsx)(r,{children:(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{children:(0,t.jsx)(n,{value:"start"})}),(0,t.jsx)("li",{children:(0,t.jsx)(n,{value:"end"})})]})}),(0,t.jsx)(p,{children:(0,t.jsx)(n,{value:"start"})}),(0,t.jsx)(d,{children:(0,t.jsxs)("p",{children:["The side that the icon will render on, if one is present. If ",(0,t.jsx)(e,{children:'state="pending"'}),", then the loading icon will also render on this side."]})})]}),(0,t.jsxs)(l,{children:[(0,t.jsx)(a,{name:"isLoading",optional:!0}),(0,t.jsx)(r,{children:(0,t.jsx)(f,{})}),(0,t.jsx)(p,{children:(0,t.jsx)(f,{value:!1})}),(0,t.jsx)(d,{children:(0,t.jsxs)("p",{children:["Determines whether or not the button is in a loading state, default ",(0,t.jsx)(e,{children:"false"}),". Setting ",(0,t.jsx)(e,{children:"isLoading"})," will replace any ",(0,t.jsx)(e,{children:"icon"})," with a spinner, or add one if an icon wasn't given. It will also disable user interaction with the button and set ",(0,t.jsx)(e,{children:"aria-disabled"}),"."]})})]}),(0,t.jsxs)(l,{children:[(0,t.jsx)(a,{name:"priority",optional:!0}),(0,t.jsx)(r,{children:(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{children:(0,t.jsx)(n,{value:"default"})}),(0,t.jsx)("li",{children:(0,t.jsx)(n,{value:"danger"})}),(0,t.jsx)("li",{children:(0,t.jsx)(n,{value:"neutral"})})]})}),(0,t.jsx)(p,{children:(0,t.jsx)(n,{value:"default"})}),(0,t.jsx)(d,{children:(0,t.jsx)("p",{children:"Indicates the importance or impact level of the button, affecting its color and styling to communicate its purpose to the user."})})]}),(0,t.jsxs)(l,{children:[(0,t.jsx)(a,{name:"type"}),(0,t.jsx)(r,{children:(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{children:(0,t.jsx)(n,{value:"button"})}),(0,t.jsx)("li",{children:(0,t.jsx)(n,{value:"reset"})}),(0,t.jsx)("li",{children:(0,t.jsx)(n,{value:"submit"})})]})}),(0,t.jsx)(p,{}),(0,t.jsxs)(d,{children:[(0,t.jsxs)("p",{children:["The default behavior of the ",(0,t.jsx)(e,{children:"Button"}),". Unlike the native"," ",(0,t.jsx)(e,{children:"button"})," element, unless you use the ",(0,t.jsx)(e,{children:"asChild"})," prop,"," ",(0,t.jsx)("span",{className:"font-semibold",children:"this prop is required and has no default value"}),". See"," ",(0,t.jsx)(g,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#type",children:"the MDN docs"})," ","for more information."]}),(0,t.jsxs)("ul",{className:"list-disc pl-5",children:[(0,t.jsx)("li",{children:(0,t.jsxs)("p",{children:[(0,t.jsx)(e,{children:'"button"'}),": The button has no default behavior, and does nothing when pressed by default."]})}),(0,t.jsx)("li",{children:(0,t.jsxs)("p",{children:[(0,t.jsx)(e,{children:'"reset"'}),": The button resets all the controls to their initial values."]})}),(0,t.jsx)("li",{children:(0,t.jsxs)("p",{children:[(0,t.jsx)(e,{children:'"submit"'}),": The button submits the form data to the server."]})})]})]})]})]})]})]})}export{L as default,D as meta};
