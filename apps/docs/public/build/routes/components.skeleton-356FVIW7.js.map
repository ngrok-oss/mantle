{
  "version": 3,
  "sources": ["../../../packages/skeleton/src/skeleton.tsx", "../../../app/routes/components.skeleton.tsx"],
  "sourcesContent": ["import type { HTMLAttributes } from \"react\";\nimport { cx } from \"../../cx\";\n\ntype Props = Exclude<HTMLAttributes<HTMLDivElement>, \"children\">;\n\n/**\n * A skeleton is a placeholder for content that is loading.\n * By using a skeleton, you can give the user an idea of what the content will\n * look like and reduce the perceived loading time and CLS (Cumulative Layout Shift).\n *\n * @note Default height is 1rem.\n */\nfunction Skeleton({ className, ...props }: Props) {\n\treturn (\n\t\t<div\n\t\t\tclassName={cx(\n\t\t\t\t\"h-4 animate-pulse rounded-md bg-gray-300/25 dark-high-contrast:bg-black/30 high-contrast:bg-black/30 dark:bg-gray-950/10\",\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nexport { Skeleton };\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/components.skeleton.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/components.skeleton.tsx\");\n  import.meta.hot.lastModified = \"1724091104717.7854\";\n}\n// REMIX HMR END\n\nimport { CodeBlock, CodeBlockBody, CodeBlockCode, CodeBlockCopyButton, fmtCode } from \"@/code-block\";\nimport { InlineCode } from \"@/inline-code\";\nimport { MediaObject, MediaObjectContent, MediaObjectMedia } from \"@/media-object\";\nimport { Skeleton } from \"@/skeleton\";\nimport { Example } from \"~/components/example\";\nimport { Link } from \"~/components/link\";\nexport const meta = () => {\n  return [{\n    title: \"@ngrok/mantle \u2014 Skeleton\"\n  }, {\n    name: \"description\",\n    content: \"mantle is ngrok's UI library and design system\"\n  }];\n};\nexport const headers = () => {\n  return {\n    \"Cache-Control\": \"max-age=300, stale-while-revalidate=604800\"\n  };\n};\nexport default function Page() {\n  return <div className=\"space-y-16\">\n\t\t\t<section className=\"space-y-4\">\n\t\t\t\t<h1 className=\"text-5xl font-medium\">Skeleton</h1>\n\t\t\t\t<p className=\"mt-4 font-body text-xl text-body\">\n\t\t\t\t\tUse to show a placeholder while content is loading. By using a <InlineCode>Skeleton</InlineCode>, you can give\n\t\t\t\t\tthe user an idea of what the content will look like, reducing the perceived loading time and CLS (Cumulative\n\t\t\t\t\tLayout Shift).\n\t\t\t\t</p>\n\t\t\t\t<div>\n\t\t\t\t\t<Example>\n\t\t\t\t\t\t<Skeleton className=\"w-full\" />\n\t\t\t\t\t</Example>\n\t\t\t\t\t<CodeBlock className=\"rounded-b-lg rounded-t-none\">\n\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t<CodeBlockCopyButton />\n\t\t\t\t\t\t\t<CodeBlockCode language=\"tsx\" value={fmtCode`\n\t\t\t\t\t\timport { Skeleton } from \"@ngrok/mantle/skeleton\";\n\n\t\t\t\t\t\t<Skeleton className=\"w-full\" />\n\t\t\t\t\t`} />\n\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t</CodeBlock>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section className=\"space-y-4\">\n\t\t\t\t<header className=\"space-y-1\">\n\t\t\t\t\t<h3 className=\"text-xl font-medium\">\n\t\t\t\t\t\tSkeleton <Link to=\"/components/media-object\">Media Object</Link>\n\t\t\t\t\t</h3>\n\t\t\t\t\t<p className=\"mt-1 font-body text-body\">\n\t\t\t\t\t\tThe Skeleton component can be included within components. You can also pass Tailwind utility classes for\n\t\t\t\t\t\tfurther control.\n\t\t\t\t\t</p>\n\t\t\t\t</header>\n\t\t\t\t<div>\n\t\t\t\t\t<Example>\n\t\t\t\t\t\t<MediaObject>\n\t\t\t\t\t\t\t<MediaObjectMedia>\n\t\t\t\t\t\t\t\t<Skeleton className=\"h-12 w-12 rounded-full\" />\n\t\t\t\t\t\t\t</MediaObjectMedia>\n\t\t\t\t\t\t\t<MediaObjectContent className=\"space-y-3\">\n\t\t\t\t\t\t\t\t<Skeleton className=\"w-[250px]\" />\n\t\t\t\t\t\t\t\t<Skeleton className=\"w-[200px]\" />\n\t\t\t\t\t\t\t</MediaObjectContent>\n\t\t\t\t\t\t</MediaObject>\n\t\t\t\t\t</Example>\n\t\t\t\t\t<CodeBlock className=\"rounded-b-lg rounded-t-none\">\n\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t<CodeBlockCopyButton />\n\t\t\t\t\t\t\t<CodeBlockCode language=\"tsx\" value={fmtCode`\n\t\t\t\t\t\t\t\t\timport { MediaObject, MediaObjectMedia, MediaObjectContent } from \"@ngrok/mantle/media-object\";\n\t\t\t\t\t\t\t\t\timport { Skeleton } from \"@ngrok/skeleton\";\n\n\t\t\t\t\t\t\t\t\t<MediaObject>\n\t\t\t\t\t\t\t\t\t\t<MediaObjectMedia>\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton className=\"h-12 w-12 rounded-full\" />\n\t\t\t\t\t\t\t\t\t\t</MediaObjectMedia>\n\t\t\t\t\t\t\t\t\t\t<MediaObjectContent className=\"space-y-3\">\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton className=\"w-[250px]\" />\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton className=\"w-[200px]\" />\n\t\t\t\t\t\t\t\t\t\t</MediaObjectContent>\n\t\t\t\t\t\t\t\t\t</MediaObject>\n\t\t\t\t\t\t\t\t`} />\n\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t</CodeBlock>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</div>;\n}\n_c = Page;\nvar _c;\n$RefreshReg$(_c, \"Page\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime"]
}
