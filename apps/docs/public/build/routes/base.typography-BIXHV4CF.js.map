{
  "version": 3,
  "sources": ["../../../app/routes/base.typography.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/base.typography.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/base.typography.tsx\");\n  import.meta.hot.lastModified = \"1724091104712.9036\";\n}\n// REMIX HMR END\n\nimport { InlineCode } from \"@/inline-code\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/table\";\nexport const meta = () => {\n  return [{\n    title: \"@ngrok/mantle \u2014 Typography\"\n  }, {\n    name: \"description\",\n    content: \"mantle is ngrok's UI library and design system\"\n  }];\n};\nexport const headers = () => {\n  return {\n    \"Cache-Control\": \"max-age=300, stale-while-revalidate=604800\"\n  };\n};\nexport default function Page() {\n  return <div>\n\t\t\t<h1 className=\"text-5xl font-medium\">Typography</h1>\n\t\t\t<p className=\"mt-4 font-body text-xl text-body\">\n\t\t\t\tMantle provides various typography tokens for consistency and readability.\n\t\t\t</p>\n\n\t\t\t<h2 className=\"mt-8 text-3xl font-medium\">Scale</h2>\n\t\t\t<p className=\"mt-3 font-body text-body\">\n\t\t\t\tMantle provides a general type scale for various headers throughout our products. Do note that our text styling\n\t\t\t\tis independent of the actual markup, so a Heading 1 can be styled as a Heading 2 or Heading 5 as appropriate.\n\t\t\t</p>\n\n\t\t\t<h1 className=\"mt-4 text-5xl font-medium\">Heading 1</h1>\n\t\t\t<h2 className=\"mt-4 text-3xl font-medium\">Heading 2</h2>\n\t\t\t<h3 className=\"mt-4 text-2xl font-medium\">Heading 3</h3>\n\t\t\t<h4 className=\"mt-4 text-xl font-medium\">Heading 4</h4>\n\t\t\t<h5 className=\"mt-4 text-base font-medium\">Heading 5</h5>\n\t\t\t<h6 className=\"mt-4 text-xs font-medium uppercase tracking-widest\">Heading 6</h6>\n\n\t\t\t<h2 className=\"mt-12 text-3xl font-medium\">Colors</h2>\n\t\t\t<p className=\"mt-3 font-body text-body\">\n\t\t\t\tWhen possible, it\u2019s preferred to render text using the following tokens. This helps provide heirarchy outside of\n\t\t\t\tfont size, and makes sure our type is the right color across various themes.\n\t\t\t</p>\n\n\t\t\t<div className=\"mt-3 flex flex-col gap-4 overflow-hidden text-xs md:flex-row\">\n\t\t\t\t<div className=\"flex flex-grow flex-col gap-1 text-strong\">\n\t\t\t\t\t<div className=\"h-10 w-full rounded bg-neutral-950\"></div>\n\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\tStrong\n\t\t\t\t\t\t<InlineCode>.text-strong</InlineCode>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"flex flex-grow flex-col gap-1\">\n\t\t\t\t\t<div className=\"h-10 w-full rounded bg-neutral-950/75\"></div>\n\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t<span className=\"text-body\">Body</span>\n\t\t\t\t\t\t<InlineCode>.text-body</InlineCode>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"flex flex-grow flex-col gap-1\">\n\t\t\t\t\t<div className=\"h-10 w-full rounded bg-neutral-950/60\"></div>\n\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t<span className=\"text-muted\">Muted</span>\n\t\t\t\t\t\t<InlineCode>.text-muted</InlineCode>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"flex flex-grow flex-col gap-1\">\n\t\t\t\t\t<div className=\"h-10 w-full rounded bg-neutral-950/50\"></div>\n\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t<span className=\"text-placeholder\">Placeholder</span>\n\t\t\t\t\t\t<InlineCode>.text-placeholder</InlineCode>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<h2 className=\"mt-12 text-3xl font-medium\">Fonts</h2>\n\t\t\t<p className=\"mt-3 font-body text-body\">\n\t\t\t\tMantle specifies Euclid as the default font for UI and headings. It extends Tailwind by providing Nunito Sans as\n\t\t\t\ta <InlineCode>font-body</InlineCode>. We also use IBM Plex Mono as a monospace typeface.\n\t\t\t</p>\n\n\t\t\t<div className=\"mt-4 overflow-hidden rounded-lg border border-card\">\n\t\t\t\t<Table>\n\t\t\t\t\t<TableHeader>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableHead>Class</TableHead>\n\t\t\t\t\t\t\t<TableHead>Fonts</TableHead>\n\t\t\t\t\t\t\t<TableHead>Description</TableHead>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHeader>\n\t\t\t\t\t<TableBody className=\"text-xs text-body\">\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell className=\"space-x-1 space-y-1\">\n\t\t\t\t\t\t\t\t<InlineCode className=\"break-keep\">font-sans</InlineCode>\n\t\t\t\t\t\t\t\t<InlineCode className=\"break-keep\">default</InlineCode>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell className=\"space-y-1\">\n\t\t\t\t\t\t\t\t<p className=\"font-sans\">Euclid Square</p>\n\t\t\t\t\t\t\t\t<p className=\"font-mono\">\"Euclid Square\", ui-sans-serif, system-ui, sans-serif</p>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>The default font for rendering UI and headings.</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t<InlineCode className=\"break-keep\">font-body</InlineCode>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell className=\"space-y-1\">\n\t\t\t\t\t\t\t\t<p className=\"font-body\">Nunito Sans</p>\n\t\t\t\t\t\t\t\t<p className=\"font-mono\">\"Nunito Sans\", ui-sans-serif, system-ui, sans-serif</p>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>Best when used in longform writing like prose documentation.</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t<InlineCode className=\"break-keep\">font-mono</InlineCode>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell className=\"space-y-1\">\n\t\t\t\t\t\t\t\t<p className=\"font-mono\">IBM Plex Mono</p>\n\t\t\t\t\t\t\t\t<p className=\"font-mono\">\n\t\t\t\t\t\t\t\t\t\"IBM Plex Mono\", ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier\n\t\t\t\t\t\t\t\t\tNew\", monospace\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\tUsed to render code and tokens. Take care to adjust the size a step down in most applications.\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t</div>;\n}\n_c = Page;\nvar _c;\n$RefreshReg$(_c, \"Page\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
