{
  "version": 3,
  "sources": ["../../../app/routes/components.password-input.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/components.password-input.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/components.password-input.tsx\");\n  import.meta.hot.lastModified = \"1724091104715.2295\";\n}\n// REMIX HMR END\n\nimport { Anchor } from \"@/anchor\";\nimport { Button } from \"@/button\";\nimport { CodeBlock, CodeBlockBody, CodeBlockCode, CodeBlockCopyButton, fmtCode } from \"@/code-block\";\nimport { InlineCode } from \"@/inline-code\";\nimport { PasswordInput } from \"@/input\";\nimport { Label } from \"@/label\";\nimport { Example } from \"~/components/example\";\nimport { BooleanPropType, FuncPropType, PropDefaultValueCell, PropDescriptionCell, PropNameCell, PropRow, PropsTable, PropTypeCell, StringPropType } from \"~/components/props-table\";\nimport { useState } from \"react\";\nexport const meta = () => {\n  return [{\n    title: \"@ngrok/mantle \u2014 PasswordInput\"\n  }, {\n    name: \"description\",\n    content: \"mantle is ngrok's UI library and design system\"\n  }];\n};\nexport const headers = () => {\n  return {\n    \"Cache-Control\": \"max-age=300, stale-while-revalidate=604800\"\n  };\n};\nconst ControlledVisibility = () => {\n  _s();\n  const [showPassword, setShowPassword] = useState(false);\n  return <div className=\"flex items-center gap-2\">\n\t\t\t<PasswordInput showValue={showPassword} onValueVisibilityChange={setShowPassword} />\n\t\t\t<Button type=\"button\" onClick={() => {\n      setShowPassword(v => !v);\n    }}>\n\t\t\t\t{showPassword ? \"Hide\" : \"Show\"} Password\n\t\t\t</Button>\n\t\t</div>;\n};\n_s(ControlledVisibility, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n_c = ControlledVisibility;\nexport default function Page() {\n  return <div className=\"space-y-16\">\n\t\t\t<section className=\"space-y-4\">\n\t\t\t\t<h1 id=\"password-input\" className=\"text-5xl font-medium\">\n\t\t\t\t\tPassword Input\n\t\t\t\t</h1>\n\t\t\t\t<p className=\"font-body text-xl text-body\">Fundamental component for password inputs.</p>\n\t\t\t\t<div>\n\t\t\t\t\t<Example className=\"flex-col gap-4\">\n\t\t\t\t\t\t<Label className=\"block w-full max-w-64 space-y-1\">\n\t\t\t\t\t\t\t<p>Password</p>\n\t\t\t\t\t\t\t<PasswordInput />\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t<Label className=\"block w-full max-w-64 space-y-1\">\n\t\t\t\t\t\t\t<p>Password (error)</p>\n\t\t\t\t\t\t\t<PasswordInput validation=\"error\" />\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t<Label className=\"block w-full max-w-64 space-y-1\">\n\t\t\t\t\t\t\t<p>Controlled Visibility</p>\n\t\t\t\t\t\t\t<ControlledVisibility />\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t<Label className=\"block w-full max-w-64 space-y-1\">\n\t\t\t\t\t\t\t<p>Masked Hidden Value</p>\n\t\t\t\t\t\t\t<PasswordInput maskHiddenValue />\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t</Example>\n\t\t\t\t\t<CodeBlock className=\"rounded-b-lg rounded-t-none\">\n\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t<CodeBlockCopyButton />\n\t\t\t\t\t\t\t<CodeBlockCode language=\"tsx\" value={fmtCode`\n\t\t\t\t\t\t\t\t\timport { PasswordInput } from \"@ngrok/mantle/input\";\n\n\t\t\t\t\t\t\t\t\t<PasswordInput />\n\t\t\t\t\t\t\t\t\t<PasswordInput invalid />\n\t\t\t\t\t\t\t\t`} />\n\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t</CodeBlock>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section className=\"space-y-4\">\n\t\t\t\t<h2 id=\"api\" className=\"text-3xl font-medium\">\n\t\t\t\t\tAPI Reference\n\t\t\t\t</h2>\n\t\t\t\t<p className=\"font-body text-xl text-body\">\n\t\t\t\t\tThe <InlineCode>PasswordInput</InlineCode> accepts the following props in addition to the{\" \"}\n\t\t\t\t\t<Anchor href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\">\n\t\t\t\t\t\tstandard HTML input attributes\n\t\t\t\t\t</Anchor>\n\t\t\t\t\t.\n\t\t\t\t</p>\n\t\t\t\t<PropsTable>\n\t\t\t\t\t<PropRow>\n\t\t\t\t\t\t<PropNameCell name=\"maskHiddenValue\" optional />\n\t\t\t\t\t\t<PropTypeCell>\n\t\t\t\t\t\t\t<BooleanPropType />\n\t\t\t\t\t\t</PropTypeCell>\n\t\t\t\t\t\t<PropDefaultValueCell>\n\t\t\t\t\t\t\t<BooleanPropType value={false} />\n\t\t\t\t\t\t</PropDefaultValueCell>\n\t\t\t\t\t\t<PropDescriptionCell>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tMask the true length of the password input with a fixed width when the value is hidden and the input is\n\t\t\t\t\t\t\t\tnot focused.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</PropDescriptionCell>\n\t\t\t\t\t</PropRow>\n\t\t\t\t\t<PropRow>\n\t\t\t\t\t\t<PropNameCell name=\"onValueVisibilityChange\" optional />\n\t\t\t\t\t\t<PropTypeCell>\n\t\t\t\t\t\t\t<FuncPropType value=\"(value: boolean) => void\" />\n\t\t\t\t\t\t</PropTypeCell>\n\t\t\t\t\t\t<PropDefaultValueCell />\n\t\t\t\t\t\t<PropDescriptionCell>\n\t\t\t\t\t\t\t<p>Callback for when the visibility of the password value changes.</p>\n\t\t\t\t\t\t</PropDescriptionCell>\n\t\t\t\t\t</PropRow>\n\t\t\t\t\t<PropRow>\n\t\t\t\t\t\t<PropNameCell name=\"showValue\" optional />\n\t\t\t\t\t\t<PropTypeCell>\n\t\t\t\t\t\t\t<BooleanPropType />\n\t\t\t\t\t\t</PropTypeCell>\n\t\t\t\t\t\t<PropDefaultValueCell>\n\t\t\t\t\t\t\t<BooleanPropType value={false} />\n\t\t\t\t\t\t</PropDefaultValueCell>\n\t\t\t\t\t\t<PropDescriptionCell>\n\t\t\t\t\t\t\t<p>Show/hide the password value as a controlled state</p>\n\t\t\t\t\t\t</PropDescriptionCell>\n\t\t\t\t\t</PropRow>\n\t\t\t\t\t<PropRow>\n\t\t\t\t\t\t<PropNameCell name=\"validation\" optional />\n\t\t\t\t\t\t<PropTypeCell>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<StringPropType value=\"error\" />\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<StringPropType value=\"success\" />\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<StringPropType value=\"warning\" />\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<BooleanPropType value={false} />\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<FuncPropType value={`() => \"error\" | \"success\" | \"warning\" | false`} />\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</PropTypeCell>\n\t\t\t\t\t\t<PropDefaultValueCell />\n\t\t\t\t\t\t<PropDescriptionCell className=\"space-y-2\">\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tUse the <InlineCode>validation</InlineCode> prop to show if the input has a specific validation status.\n\t\t\t\t\t\t\t\tThis will change the border and outline of the input.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tThe <InlineCode>false</InlineCode> type is useful when using short-circuiting logic so that you don't\n\t\t\t\t\t\t\t\tneed to use a ternary with <InlineCode>undefined</InlineCode>.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tSetting <InlineCode>validation</InlineCode> to <InlineCode>error</InlineCode> also sets{\" \"}\n\t\t\t\t\t\t\t\t<InlineCode>aria-invalid</InlineCode>.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</PropDescriptionCell>\n\t\t\t\t\t</PropRow>\n\t\t\t\t</PropsTable>\n\t\t\t</section>\n\t\t</div>;\n}\n_c2 = Page;\nvar _c, _c2;\n$RefreshReg$(_c, \"ControlledVisibility\");\n$RefreshReg$(_c2, \"Page\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
