{
  "version": 3,
  "sources": ["../../../app/routes/components.table.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/components.table.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/components.table.tsx\");\n  import.meta.hot.lastModified = \"1724091104718.0046\";\n}\n// REMIX HMR END\n\nimport { CodeBlock, CodeBlockBody, CodeBlockCode, CodeBlockCopyButton, fmtCode } from \"@/code-block\";\nimport { Table, TableBody, TableCaption, TableCell, TableFooter, TableHead, TableHeader, TableRow } from \"@/table\";\nimport { Example } from \"~/components/example\";\nexport const meta = () => {\n  return [{\n    title: \"@ngrok/mantle \u2014 Table\"\n  }, {\n    name: \"description\",\n    content: \"mantle is ngrok's UI library and design system\"\n  }];\n};\nexport const headers = () => {\n  return {\n    \"Cache-Control\": \"max-age=300, stale-while-revalidate=604800\"\n  };\n};\nexport default function Page() {\n  return <section className=\"space-y-4\">\n\t\t\t<h1 className=\"text-5xl font-medium\">Table</h1>\n\t\t\t<p className=\"font-body text-xl text-body\">A responsive table component.</p>\n\t\t\t<div>\n\t\t\t\t<Example className=\"gap-2\">\n\t\t\t\t\t<ExampleTable />\n\t\t\t\t</Example>\n\t\t\t\t<CodeBlock className=\"rounded-b-lg rounded-t-none\">\n\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t<CodeBlockCopyButton />\n\t\t\t\t\t\t<CodeBlockCode language=\"tsx\" value={fmtCode`\n\t\t\t\t\t\t\timport { Table, TableBody, TableCaption, TableCell, TableFooter, TableHead, TableHeader, TableRow } from \"@ngrok/mantle/table\";\n\n\t\t\t\t\t\t\t<Table>\n\t\t\t\t\t\t\t\t<TableCaption>A list of your recent invoices.</TableCaption>\n\t\t\t\t\t\t\t\t<TableHeader>\n\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t<TableHead className=\"w-[100px]\">Invoice</TableHead>\n\t\t\t\t\t\t\t\t\t\t<TableHead>Status</TableHead>\n\t\t\t\t\t\t\t\t\t\t<TableHead>Method</TableHead>\n\t\t\t\t\t\t\t\t\t\t<TableHead className=\"text-right\">Amount</TableHead>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t</TableHeader>\n\t\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t\t{invoices.map((invoice) => (\n\t\t\t\t\t\t\t\t\t\t<TableRow key={invoice.invoice}>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className=\"font-medium\">{invoice.invoice}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>{invoice.paymentStatus}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>{invoice.paymentMethod}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className=\"text-right\">{invoice.totalAmount}</TableCell>\n\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t\t\t<TableFooter>\n\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t<TableCell colSpan={3}>Total</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell className=\"text-right\">$2,500.00</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t</TableFooter>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t`} />\n\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t</CodeBlock>\n\t\t\t</div>\n\t\t</section>;\n}\n_c = Page;\nconst ExampleTable = () => {\n  const invoices = [{\n    invoice: \"INV001\",\n    paymentStatus: \"Paid\",\n    totalAmount: \"$250.00\",\n    paymentMethod: \"Credit Card\"\n  }, {\n    invoice: \"INV002\",\n    paymentStatus: \"Pending\",\n    totalAmount: \"$150.00\",\n    paymentMethod: \"PayPal\"\n  }, {\n    invoice: \"INV003\",\n    paymentStatus: \"Unpaid\",\n    totalAmount: \"$350.00\",\n    paymentMethod: \"Bank Transfer\"\n  }, {\n    invoice: \"INV004\",\n    paymentStatus: \"Paid\",\n    totalAmount: \"$450.00\",\n    paymentMethod: \"Credit Card\"\n  }, {\n    invoice: \"INV005\",\n    paymentStatus: \"Paid\",\n    totalAmount: \"$550.00\",\n    paymentMethod: \"PayPal\"\n  }, {\n    invoice: \"INV006\",\n    paymentStatus: \"Pending\",\n    totalAmount: \"$200.00\",\n    paymentMethod: \"Bank Transfer\"\n  }, {\n    invoice: \"INV007\",\n    paymentStatus: \"Unpaid\",\n    totalAmount: \"$300.00\",\n    paymentMethod: \"Credit Card\"\n  }];\n  return <div className=\"z-10 mt-4 overflow-hidden rounded-lg border border-gray-300 bg-white dark:bg-gray-100\">\n\t\t\t<Table>\n\t\t\t\t<TableCaption>A list of your recent invoices.</TableCaption>\n\t\t\t\t<TableHeader>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableHead className=\"w-[100px]\">Invoice</TableHead>\n\t\t\t\t\t\t<TableHead>Status</TableHead>\n\t\t\t\t\t\t<TableHead>Method</TableHead>\n\t\t\t\t\t\t<TableHead className=\"text-right\">Amount</TableHead>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHeader>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{invoices.map(invoice => <TableRow key={invoice.invoice}>\n\t\t\t\t\t\t\t<TableCell className=\"font-medium\">{invoice.invoice}</TableCell>\n\t\t\t\t\t\t\t<TableCell>{invoice.paymentStatus}</TableCell>\n\t\t\t\t\t\t\t<TableCell>{invoice.paymentMethod}</TableCell>\n\t\t\t\t\t\t\t<TableCell className=\"text-right\">{invoice.totalAmount}</TableCell>\n\t\t\t\t\t\t</TableRow>)}\n\t\t\t\t</TableBody>\n\t\t\t\t<TableFooter>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell colSpan={3}>Total</TableCell>\n\t\t\t\t\t\t<TableCell className=\"text-right\">$2,500.00</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableFooter>\n\t\t\t</Table>\n\t\t</div>;\n};\n_c2 = ExampleTable;\nvar _c, _c2;\n$RefreshReg$(_c, \"Page\");\n$RefreshReg$(_c2, \"ExampleTable\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCG;AArCH,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,sCAAwC,EAAE;AAAA,EACnF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAiC;AACjC,cAAY,IAAI,eAAe;AACjC;AAMO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,SAAS;AAAA,EACX,CAAC;AACH;AAMe,SAAR,OAAwB;AAC7B,SAAO,mDAAC,aAAQ,WAAU,aACzB;AAAA,uDAAC,QAAG,WAAU,wBAAuB,qBAArC;AAAA;AAAA;AAAA;AAAA,WAA0C;AAAA,IAC1C,mDAAC,OAAE,WAAU,+BAA8B,6CAA3C;AAAA;AAAA;AAAA;AAAA,WAAwE;AAAA,IACxE,mDAAC,SACA;AAAA,yDAAC,WAAQ,WAAU,SAClB,6DAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,aAAc,KADf;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC,aAAU,WAAU,+BACpB,6DAAC,iBACA;AAAA,2DAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,eAAqB;AAAA,QACrB,mDAAC,iBAAc,UAAS,OAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAArC;AAAA;AAAA;AAAA;AAAA,eA8BG;AAAA,WAhCJ;AAAA;AAAA;AAAA;AAAA,aAiCA,KAlCD;AAAA;AAAA;AAAA;AAAA,aAmCA;AAAA,SAvCD;AAAA;AAAA;AAAA;AAAA,WAwCA;AAAA,OA3CM;AAAA;AAAA;AAAA;AAAA,SA4CP;AACF;AACA,KAAK;AACL,IAAM,eAAe,MAAM;AACzB,QAAM,WAAW,CAAC;AAAA,IAChB,SAAS;AAAA,IACT,eAAe;AAAA,IACf,aAAa;AAAA,IACb,eAAe;AAAA,EACjB,GAAG;AAAA,IACD,SAAS;AAAA,IACT,eAAe;AAAA,IACf,aAAa;AAAA,IACb,eAAe;AAAA,EACjB,GAAG;AAAA,IACD,SAAS;AAAA,IACT,eAAe;AAAA,IACf,aAAa;AAAA,IACb,eAAe;AAAA,EACjB,GAAG;AAAA,IACD,SAAS;AAAA,IACT,eAAe;AAAA,IACf,aAAa;AAAA,IACb,eAAe;AAAA,EACjB,GAAG;AAAA,IACD,SAAS;AAAA,IACT,eAAe;AAAA,IACf,aAAa;AAAA,IACb,eAAe;AAAA,EACjB,GAAG;AAAA,IACD,SAAS;AAAA,IACT,eAAe;AAAA,IACf,aAAa;AAAA,IACb,eAAe;AAAA,EACjB,GAAG;AAAA,IACD,SAAS;AAAA,IACT,eAAe;AAAA,IACf,aAAa;AAAA,IACb,eAAe;AAAA,EACjB,CAAC;AACD,SAAO,mDAAC,SAAI,WAAU,yFACrB,6DAAC,SACA;AAAA,uDAAC,gBAAa,+CAAd;AAAA;AAAA;AAAA;AAAA,WAA6C;AAAA,IAC7C,mDAAC,eACA,6DAAC,YACA;AAAA,yDAAC,aAAU,WAAU,aAAY,uBAAjC;AAAA;AAAA;AAAA;AAAA,aAAwC;AAAA,MACxC,mDAAC,aAAU,sBAAX;AAAA;AAAA;AAAA;AAAA,aAAiB;AAAA,MACjB,mDAAC,aAAU,sBAAX;AAAA;AAAA;AAAA;AAAA,aAAiB;AAAA,MACjB,mDAAC,aAAU,WAAU,cAAa,sBAAlC;AAAA;AAAA;AAAA;AAAA,aAAwC;AAAA,SAJzC;AAAA;AAAA;AAAA;AAAA,WAKA,KAND;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,IACA,mDAAC,aACC,mBAAS,IAAI,aAAW,mDAAC,YACxB;AAAA,yDAAC,aAAU,WAAU,eAAe,kBAAQ,WAA5C;AAAA;AAAA;AAAA;AAAA,aAAoD;AAAA,MACpD,mDAAC,aAAW,kBAAQ,iBAApB;AAAA;AAAA;AAAA;AAAA,aAAkC;AAAA,MAClC,mDAAC,aAAW,kBAAQ,iBAApB;AAAA;AAAA;AAAA;AAAA,aAAkC;AAAA,MAClC,mDAAC,aAAU,WAAU,cAAc,kBAAQ,eAA3C;AAAA;AAAA;AAAA;AAAA,aAAuD;AAAA,SAJjB,QAAQ,SAAvB;AAAA;AAAA;AAAA;AAAA,WAKxB,CAAW,KANb;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,IACA,mDAAC,eACA,6DAAC,YACA;AAAA,yDAAC,aAAU,SAAS,GAAG,qBAAvB;AAAA;AAAA;AAAA;AAAA,aAA4B;AAAA,MAC5B,mDAAC,aAAU,WAAU,cAAa,yBAAlC;AAAA;AAAA;AAAA;AAAA,aAA2C;AAAA,SAF5C;AAAA;AAAA;AAAA;AAAA,WAGA,KAJD;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,OAvBD;AAAA;AAAA;AAAA;AAAA,SAwBA,KAzBM;AAAA;AAAA;AAAA;AAAA,SA0BP;AACF;AACA,MAAM;AACN,IAAI;AAAJ,IAAQ;AACR,aAAa,IAAI,MAAM;AACvB,aAAa,KAAK,cAAc;AAEhC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
