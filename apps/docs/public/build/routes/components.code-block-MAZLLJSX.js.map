{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@phosphor-icons/react/dist/csr/Terminal.mjs", "../../../node_modules/.pnpm/@phosphor-icons+react@2.1.7_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@phosphor-icons/react/dist/defs/Terminal.mjs", "../../../app/routes/components.code-block.tsx"],
  "sourcesContent": ["var f = Object.defineProperty, n = Object.defineProperties;\nvar p = Object.getOwnPropertyDescriptors;\nvar o = Object.getOwnPropertySymbols;\nvar s = Object.prototype.hasOwnProperty, c = Object.prototype.propertyIsEnumerable;\nvar a = (r, e, m) => e in r ? f(r, e, { enumerable: !0, configurable: !0, writable: !0, value: m }) : r[e] = m, t = (r, e) => {\n  for (var m in e || (e = {}))\n    s.call(e, m) && a(r, m, e[m]);\n  if (o)\n    for (var m of o(e))\n      c.call(e, m) && a(r, m, e[m]);\n  return r;\n}, i = (r, e) => n(r, p(e));\nimport l, { forwardRef as d } from \"react\";\nimport w from \"../lib/IconBase.mjs\";\nimport I from \"../defs/Terminal.mjs\";\nconst R = d((r, e) => /* @__PURE__ */ l.createElement(w, i(t({ ref: e }, r), { weights: I })));\nR.displayName = \"Terminal\";\nexport {\n  R as Terminal\n};\n", "import e from \"react\";\nconst t = /* @__PURE__ */ new Map([\n  [\n    \"bold\",\n    /* @__PURE__ */ e.createElement(e.Fragment, null, /* @__PURE__ */ e.createElement(\"path\", { d: \"M120,137,48,201A12,12,0,1,1,32,183l61.91-55L32,73A12,12,0,1,1,48,55l72,64A12,12,0,0,1,120,137Zm96,43H120a12,12,0,0,0,0,24h96a12,12,0,0,0,0-24Z\" }))\n  ],\n  [\n    \"duotone\",\n    /* @__PURE__ */ e.createElement(e.Fragment, null, /* @__PURE__ */ e.createElement(\"path\", { d: \"M216,80V192H40V64H200A16,16,0,0,1,216,80Z\", opacity: \"0.2\" }), /* @__PURE__ */ e.createElement(\"path\", { d: \"M117.31,134l-72,64a8,8,0,1,1-10.63-12L100,128,34.69,70A8,8,0,1,1,45.32,58l72,64a8,8,0,0,1,0,12ZM216,184H120a8,8,0,0,0,0,16h96a8,8,0,0,0,0-16Z\" }))\n  ],\n  [\n    \"fill\",\n    /* @__PURE__ */ e.createElement(e.Fragment, null, /* @__PURE__ */ e.createElement(\"path\", { d: \"M216,40H40A16,16,0,0,0,24,56V200a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A16,16,0,0,0,216,40ZM77.66,173.66a8,8,0,0,1-11.32-11.32L100.69,128,66.34,93.66A8,8,0,0,1,77.66,82.34l40,40a8,8,0,0,1,0,11.32ZM192,176H128a8,8,0,0,1,0-16h64a8,8,0,0,1,0,16Z\" }))\n  ],\n  [\n    \"light\",\n    /* @__PURE__ */ e.createElement(e.Fragment, null, /* @__PURE__ */ e.createElement(\"path\", { d: \"M116,132.48l-72,64a6,6,0,0,1-8-9L103,128,36,68.49a6,6,0,0,1,8-9l72,64a6,6,0,0,1,0,9ZM216,186H120a6,6,0,0,0,0,12h96a6,6,0,0,0,0-12Z\" }))\n  ],\n  [\n    \"regular\",\n    /* @__PURE__ */ e.createElement(e.Fragment, null, /* @__PURE__ */ e.createElement(\"path\", { d: \"M117.31,134l-72,64a8,8,0,1,1-10.63-12L100,128,34.69,70A8,8,0,1,1,45.32,58l72,64a8,8,0,0,1,0,12ZM216,184H120a8,8,0,0,0,0,16h96a8,8,0,0,0,0-16Z\" }))\n  ],\n  [\n    \"thin\",\n    /* @__PURE__ */ e.createElement(e.Fragment, null, /* @__PURE__ */ e.createElement(\"path\", { d: \"M116,128a4,4,0,0,1-1.34,3l-72,64a4,4,0,1,1-5.32-6L106,128,37.34,67a4,4,0,0,1,5.32-6l72,64A4,4,0,0,1,116,128Zm100,60H120a4,4,0,0,0,0,8h96a4,4,0,0,0,0-8Z\" }))\n  ]\n]);\nexport {\n  t as default\n};\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/components.code-block.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/components.code-block.tsx\");\n  import.meta.hot.lastModified = \"1724091104714.0881\";\n}\n// REMIX HMR END\n\nimport { Card, CardBody } from \"@/card\";\nimport { CodeBlock, CodeBlockBody, CodeBlockCode, CodeBlockCopyButton, CodeBlockExpanderButton, CodeBlockHeader, CodeBlockTitle, fmtCode, supportedLanguages } from \"@/code-block\";\nimport { FileText } from \"@phosphor-icons/react/FileText\";\nimport { Terminal } from \"@phosphor-icons/react/Terminal\";\nimport { Example } from \"~/components/example\";\nexport const meta = () => {\n  return [{\n    title: \"@ngrok/mantle \u2014 Code Block\"\n  }, {\n    name: \"description\",\n    content: \"mantle is ngrok's UI library and design system\"\n  }];\n};\nexport const headers = () => {\n  return {\n    \"Cache-Control\": \"max-age=300, stale-while-revalidate=604800\"\n  };\n};\nexport default function Page() {\n  return <div className=\"space-y-16\">\n\t\t\t<section className=\"space-y-4\">\n\t\t\t\t<h1 className=\"text-5xl font-medium\">Code Block</h1>\n\t\t\t\t<p className=\"font-body text-xl text-body\">\n\t\t\t\t\tCode blocks render and apply syntax highlighting to blocks of code.\n\t\t\t\t</p>\n\n\t\t\t\t<div>\n\t\t\t\t\t<Example>\n\t\t\t\t\t\t<CodeBlock>\n\t\t\t\t\t\t\t<CodeBlockHeader>\n\t\t\t\t\t\t\t\t<FileText className=\"h-5 w-5\" weight=\"fill\" />\n\t\t\t\t\t\t\t\t<CodeBlockTitle>ngrok-example.js</CodeBlockTitle>\n\t\t\t\t\t\t\t</CodeBlockHeader>\n\t\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t\t<CodeBlockCopyButton />\n\t\t\t\t\t\t\t\t<CodeBlockCode language=\"js\" value={fmtCode`\n\t\t\t\t\t\t\t\tconst listener = await ngrok.connect({\n\t\t\t\t\t\t\t\t\t// session configuration\n\t\t\t\t\t\t\t\t\taddr: \\`localhost:8080\\`, // or \\`8080\\` or \\`unix:$\\{UNIX_SOCKET\\}\\`\n\t\t\t\t\t\t\t\t\tauthtoken: \"<authtoken>\",\n\t\t\t\t\t\t\t\t\tauthtoken_from_env: true,\n\t\t\t\t\t\t\t\t\ton_status_change: (addr, error) => {\n\t\t\t\t\t\t\t\t\t\tconsole.log(\\`disconnected, addr $\\{addr\\} error: $\\{error\\}\\`);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsession_metadata: \"Online in One Line\",\n\t\t\t\t\t\t\t\t\t// listener configuration\n\t\t\t\t\t\t\t\t\tallow_user_agent: \"^mozilla.*\",\n\t\t\t\t\t\t\t\t\tbasic_auth: [\"ngrok:online1line\"],\n\t\t\t\t\t\t\t\t\tcircuit_breaker: 0.1,\n\t\t\t\t\t\t\t\t\tcompression: true,\n\t\t\t\t\t\t\t\t\tdeny_user_agent: \"^curl.*\",\n\t\t\t\t\t\t\t\t\tdomain: \"<domain>\",\n\t\t\t\t\t\t\t\t\tip_restriction_allow_cidrs: [\"0.0.0.0/0\"],\n\t\t\t\t\t\t\t\t\tip_restriction_deny_cidrs: [\"10.1.1.1/32\"],\n\t\t\t\t\t\t\t\t\tmetadata: \"example listener metadata from nodejs\",\n\t\t\t\t\t\t\t\t\tmutual_tls_cas: [fs.readFileSync('ca.crt', 'utf8')],\n\t\t\t\t\t\t\t\t\toauth_provider: \"google\",\n\t\t\t\t\t\t\t\t\toauth_allow_domains: [\"<domain>\"],\n\t\t\t\t\t\t\t\t\toauth_allow_emails: [\"<email>\"],\n\t\t\t\t\t\t\t\t\toauth_scopes: [\"<scope>\"],\n\t\t\t\t\t\t\t\t\toauth_client_id: \"<id>\",\n\t\t\t\t\t\t\t\t\toauth_client_secret: \"<secret>\",\n\t\t\t\t\t\t\t\t\toidc_issuer_url: \"<url>\",\n\t\t\t\t\t\t\t\t\toidc_client_id: \"<id>\",\n\t\t\t\t\t\t\t\t\toidc_client_secret: \"<secret>\",\n\t\t\t\t\t\t\t\t\toidc_allow_domains: [\"<domain>\"],\n\t\t\t\t\t\t\t\t\toidc_allow_emails: [\"<email>\"],\n\t\t\t\t\t\t\t\t\toidc_scopes: [\"<scope>\"],\n\t\t\t\t\t\t\t\t\tproxy_proto: \"\", // One of: \"\", \"1\", \"2\"\n\t\t\t\t\t\t\t\t\trequest_header_remove: [\"X-Req-Nope\"],\n\t\t\t\t\t\t\t\t\tresponse_header_remove: [\"X-Res-Nope\"],\n\t\t\t\t\t\t\t\t\trequest_header_add: [\"X-Req-Yup:true\"],\n\t\t\t\t\t\t\t\t\tresponse_header_add: [\"X-Res-Yup:true\"],\n\t\t\t\t\t\t\t\t\tschemes: [\"HTTPS\"],\n\t\t\t\t\t\t\t\t\tverify_webhook_provider: \"twilio\",\n\t\t\t\t\t\t\t\t\tverify_webhook_secret: \"asdf\",\n\t\t\t\t\t\t\t\t\twebsocket_tcp_converter: true,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t`} />\n\t\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t\t\t<CodeBlockExpanderButton />\n\t\t\t\t\t\t</CodeBlock>\n\t\t\t\t\t</Example>\n\t\t\t\t\t<CodeBlock className=\"rounded-b-lg rounded-t-none\">\n\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t<CodeBlockCopyButton />\n\t\t\t\t\t\t\t<CodeBlockCode language=\"tsx\" value={fmtCode`\n\t\t\t\t\t\t\timport {\n\t\t\t\t\t\t\t\tCodeBlock,\n\t\t\t\t\t\t\t\tCodeBlockBody,\n\t\t\t\t\t\t\t\tCodeBlockCode,\n\t\t\t\t\t\t\t\tCodeBlockCopyButton,\n\t\t\t\t\t\t\t\tCodeBlockExpanderButton,\n\t\t\t\t\t\t\t\tCodeBlockHeader,\n\t\t\t\t\t\t\t\tCodeBlockTitle,\n\t\t\t\t\t\t\t\tfmtCode,\n\t\t\t\t\t\t\t} from \"@ngrok/mantle/code-block\";\n\n\t\t\t\t\t\t\t<CodeBlock>\n\t\t\t\t\t\t\t\t<CodeBlockHeader>\n\t\t\t\t\t\t\t\t\t<Icon />\n\t\t\t\t\t\t\t\t\t<CodeBlockTitle>\u2026</CodeBlockTitle>\n\t\t\t\t\t\t\t\t</CodeBlockHeader>\n\t\t\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t\t\t<CodeBlockCopyButton />\n\t\t\t\t\t\t\t\t\t<CodeBlockCode language=\"\u2026\" value={fmtCode\\`\u2026\\`} />\n\t\t\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t\t\t\t<CodeBlockExpanderButton />\n\t\t\t\t\t\t\t</CodeBlock>\n\t\t\t\t\t\t`} />\n\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t</CodeBlock>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section className=\"space-y-8\">\n\t\t\t\t<h2 className=\"text-3xl font-medium\">Examples</h2>\n\n\t\t\t\t<section className=\"space-y-4\">\n\t\t\t\t\t<header className=\"space-y-1\">\n\t\t\t\t\t\t<h3 className=\"text-xl font-medium\">Single Line with a Header</h3>\n\t\t\t\t\t\t<p className=\"font-body text-body\">\n\t\t\t\t\t\t\tMany code blocks will be single line command line prompts and should be able to render with a header and\n\t\t\t\t\t\t\tcopy button. This makes it absolutely clear that this example is a command line prompt and not a code\n\t\t\t\t\t\t\tsample.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</header>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Example>\n\t\t\t\t\t\t\t<CodeBlock>\n\t\t\t\t\t\t\t\t<CodeBlockHeader>\n\t\t\t\t\t\t\t\t\t<Terminal className=\"h-5 w-5\" weight=\"fill\" />\n\t\t\t\t\t\t\t\t\t<CodeBlockTitle>Command Line</CodeBlockTitle>\n\t\t\t\t\t\t\t\t</CodeBlockHeader>\n\t\t\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t\t\t<CodeBlockCopyButton />\n\t\t\t\t\t\t\t\t\t<CodeBlockCode language=\"sh\" value={fmtCode`sudo unzip ~/Downloads/ngrok-v3-stable-darwin.zip -d /usr/local/bin`} />\n\t\t\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t\t\t</CodeBlock>\n\t\t\t\t\t\t</Example>\n\t\t\t\t\t\t<CodeBlock className=\"rounded-b-lg rounded-t-none\">\n\t\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t\t<CodeBlockCopyButton />\n\t\t\t\t\t\t\t\t<CodeBlockCode language=\"tsx\" value={fmtCode`\n\t\t\t\t\t\t\t\t<CodeBlock>\n\t\t\t\t\t\t\t\t\t<CodeBlockHeader>\n\t\t\t\t\t\t\t\t\t\t<CommandLineIcon />\n\t\t\t\t\t\t\t\t\t\t<CodeBlockTitle>Command Line</CodeBlockTitle>\n\t\t\t\t\t\t\t\t\t</CodeBlockHeader>\n\t\t\t\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t\t\t\t<CodeBlockCopyButton />\n\t\t\t\t\t\t\t\t\t\t<CodeBlockCode language=\"sh\" value={fmtCode\\`sudo unzip ~/Downloads/ngrok-v3-stable-darwin.zip -d /usr/local/bin\\`} />\n\t\t\t\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t\t\t\t</CodeBlock>\n\t\t\t\t\t\t\t`} />\n\t\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t\t</CodeBlock>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t<section className=\"space-y-4\">\n\t\t\t\t\t<header className=\"space-y-1\">\n\t\t\t\t\t\t<h3 className=\"text-xl font-medium\">Horizontal Scrolling</h3>\n\t\t\t\t\t\t<p className=\"font-body text-body\">\n\t\t\t\t\t\t\tThis example is included to demonstrate that code blocks can scroll horizontally if the content is too\n\t\t\t\t\t\t\twide. Mantle attempts to normalize scrollbar styling across browsers and platforms.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</header>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Example>\n\t\t\t\t\t\t\t<CodeBlock>\n\t\t\t\t\t\t\t\t<CodeBlockHeader>\n\t\t\t\t\t\t\t\t\t<FileText className=\"h-5 w-5\" weight=\"fill\" />\n\t\t\t\t\t\t\t\t\t<CodeBlockTitle>ngrok-example.js</CodeBlockTitle>\n\t\t\t\t\t\t\t\t</CodeBlockHeader>\n\t\t\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t\t\t<CodeBlockCopyButton />\n\t\t\t\t\t\t\t\t\t<CodeBlockCode language=\"js\" value={fmtCode`\n\t\t\t\t\t\t\t\t\tconst http = require('http');\n\t\t\t\t\t\t\t\t\tconst ngrok = require(\"@ngrok/ngrok\");\n\t\t\t\t\t\t\t\t\tconst server = http.createServer((req, res) => {\n\t\t\t\t\t\t\t\t\t\tres.writeHead(200);\n\t\t\t\t\t\t\t\t\t\tres.end(\"Hello!\");\n\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\t\t\tPromise.resolve(() => {\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"url:\", server.tunnel.url());\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}, timeout);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t// Consumes authtoken from env automatically\n\t\t\t\t\t\t\t\t\tngrok.listen(server).then(() => {\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"url:\", server.tunnel.url());\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t// really long line here that should wrap around and stuff Officia ipsum sint eu labore esse deserunt aliqua quis irure.\n\t\t\t\t\t\t\t\t`} />\n\t\t\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t\t\t</CodeBlock>\n\t\t\t\t\t\t</Example>\n\t\t\t\t\t\t<CodeBlock className=\"rounded-b-lg rounded-t-none\">\n\t\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t\t<CodeBlockCopyButton />\n\t\t\t\t\t\t\t\t<CodeBlockCode language=\"tsx\" value={fmtCode`\n\t\t\t\t\t\t\t\t<CodeBlock>\n\t\t\t\t\t\t\t\t\t<CodeBlockHeader>\n\t\t\t\t\t\t\t\t\t\t<FileIcon />\n\t\t\t\t\t\t\t\t\t\t<CodeBlockTitle>ngrok-example.js</CodeBlockTitle>\n\t\t\t\t\t\t\t\t\t</CodeBlockHeader>\n\t\t\t\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t\t\t\t<CodeBlockCopyButton />\n\t\t\t\t\t\t\t\t\t\t<CodeBlockCode\n\t\t\t\t\t\t\t\t\t\t\tlanguage=\"js\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={fmtCode\\`\n\t\t\t\t\t\t\t\t\t\t\t\tconst http = require('http');\n\t\t\t\t\t\t\t\t\t\t\t\tconst ngrok = require(\"@ngrok/ngrok\");\n\t\t\t\t\t\t\t\t\t\t\t\tconst server = http.createServer((req, res) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tres.writeHead(200);\n\t\t\t\t\t\t\t\t\t\t\t\t\tres.end(\"Hello!\");\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tPromise.resolve(() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"url:\", server.tunnel.url());\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t}, timeout);\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t// Consumes authtoken from env automatically\n\t\t\t\t\t\t\t\t\t\t\t\tngrok.listen(server).then(() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"url:\", server.tunnel.url());\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t// really long line here that should wrap around and stuff Officia ipsum sint eu labore esse deserunt aliqua quis irure.\n\t\t\t\t\t\t\t\t\t\t\t\\`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t\t\t\t</CodeBlock>\n\t\t\t\t\t\t\t`} />\n\t\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t\t\t<CodeBlockExpanderButton />\n\t\t\t\t\t\t</CodeBlock>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t<section className=\"space-y-4\">\n\t\t\t\t\t<header className=\"space-y-1\">\n\t\t\t\t\t\t<h3 className=\"text-xl font-medium\">No Header or Copy Button</h3>\n\t\t\t\t\t\t<p className=\"font-body text-body\">\n\t\t\t\t\t\t\tThis is the most simple example of our code block component. While very useful, the copy button is\n\t\t\t\t\t\t\toptional. It is also perfectly acceptable to render a code block without a header, especially if context\n\t\t\t\t\t\t\tis provided in the surrounding content or the code block is self-explanatory eg. \u201CIn your index.js file,\n\t\t\t\t\t\t\tpaste the following:\u201D.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</header>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Example>\n\t\t\t\t\t\t\t<CodeBlock>\n\t\t\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t\t\t<CodeBlockCode language=\"js\" value={fmtCode`\n\t\t\t\t\t\t\t\t\tconst http = require('http');\n\t\t\t\t\t\t\t\t\tconst ngrok = require(\"@ngrok/ngrok\");\n\t\t\t\t\t\t\t\t\tconst server = http.createServer((req, res) => {\n\t\t\t\t\t\t\t\t\t\tres.writeHead(200);\n\t\t\t\t\t\t\t\t\t\tres.end(\"Hello!\");\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t// Consumes authtoken from env automatically\n\t\t\t\t\t\t\t\t\tngrok.listen(server).then(() => {\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"url:\", server.tunnel.url());\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t`} />\n\t\t\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t\t\t</CodeBlock>\n\t\t\t\t\t\t</Example>\n\t\t\t\t\t\t<CodeBlock className=\"rounded-b-lg rounded-t-none\">\n\t\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t\t<CodeBlockCopyButton />\n\t\t\t\t\t\t\t\t<CodeBlockCode language=\"tsx\" value={fmtCode`\n\t\t\t\t\t\t\t\t<CodeBlock>\n\t\t\t\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t\t\t\t<CodeBlockCode\n\t\t\t\t\t\t\t\t\t\t\tlanguage=\"js\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={fmtCode\\`\n\t\t\t\t\t\t\t\t\t\t\t\tconst http = require('http');\n\t\t\t\t\t\t\t\t\t\t\t\tconst ngrok = require(\"@ngrok/ngrok\");\n\t\t\t\t\t\t\t\t\t\t\t\tconst server = http.createServer((req, res) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tres.writeHead(200);\n\t\t\t\t\t\t\t\t\t\t\t\t\tres.end(\"Hello!\");\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t// Consumes authtoken from env automatically\n\t\t\t\t\t\t\t\t\t\t\t\tngrok.listen(server).then(() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"url:\", server.tunnel.url());\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\\`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t\t\t\t</CodeBlock>\n\t\t\t\t\t\t\t`} />\n\t\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t\t\t<CodeBlockExpanderButton />\n\t\t\t\t\t\t</CodeBlock>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t<section className=\"space-y-4\">\n\t\t\t\t\t<header className=\"space-y-1\">\n\t\t\t\t\t\t<h3 className=\"text-xl font-medium\">Single Line with Horizontal Scrolling</h3>\n\t\t\t\t\t\t<p className=\"font-body text-body\">\n\t\t\t\t\t\t\tThis example is included to show the interaction between the copy button and horizontal scrolling on a\n\t\t\t\t\t\t\tsingle verbose terminal command.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</header>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Example>\n\t\t\t\t\t\t\t<CodeBlock>\n\t\t\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t\t\t<CodeBlockCopyButton />\n\t\t\t\t\t\t\t\t\t<CodeBlockCode language=\"sh\" value={fmtCode`ffmpeg -i multichannel.mxf -map 0:v:0 -map 0:a:0 -map 0:a:0 -c:a:0 ac3 -b:a:0 640k -ac:a:1 2 -c:a:1 aac -b:2 128k out.mp4`} />\n\t\t\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t\t\t</CodeBlock>\n\t\t\t\t\t\t</Example>\n\t\t\t\t\t\t<CodeBlock className=\"rounded-b-lg rounded-t-none\">\n\t\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t\t<CodeBlockCopyButton />\n\t\t\t\t\t\t\t\t<CodeBlockCode language=\"tsx\" value={fmtCode`\n\t\t\t\t\t\t\t<CodeBlock>\n\t\t\t\t\t\t\t\t<CodeBlockBody>\n\t\t\t\t\t\t\t\t\t<CodeBlockCopyButton />\n\t\t\t\t\t\t\t\t\t<CodeBlockCode\n\t\t\t\t\t\t\t\t\t\tlanguage=\"sh\"\n\t\t\t\t\t\t\t\t\t\tvalue={fmtCode\\`ffmpeg -i multichannel.mxf -map 0:v:0 -map 0:a:0 -map 0:a:0 -c:a:0 ac3 -b:a:0 640k -ac:a:1 2 -c:a:1 aac -b:2 128k out.mp4\\`}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t\t\t</CodeBlock>\n\t\t\t\t\t\t\t`} />\n\t\t\t\t\t\t\t</CodeBlockBody>\n\t\t\t\t\t\t</CodeBlock>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</section>\n\n\t\t\t<section className=\"space-y-4\">\n\t\t\t\t<h2 id=\"supported-languages\" className=\"text-3xl font-medium\">\n\t\t\t\t\tSupported Languages\n\t\t\t\t</h2>\n\t\t\t\t<p className=\"font-body text-xl text-body\">Mantle supports the following languages:</p>\n\n\t\t\t\t<Card className=\"font-mono text-xs\">\n\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t<ul className=\"grid grid-cols-3 gap-2 lg:grid-cols-7\">\n\t\t\t\t\t\t\t{supportedLanguages.map(language => <li key={language}>{language}</li>)}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</CardBody>\n\t\t\t\t</Card>\n\t\t\t</section>\n\t\t</div>;\n}\n_c = Page;\nvar _c;\n$RefreshReg$(_c, \"Page\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "e", "e", "t", "d", "l"]
}
